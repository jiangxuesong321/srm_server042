<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cmoc.modules.srm.mapper.PurPayPlanMapper">
    <select id="getTotalAmountByCurrency" resultType="com.cmoc.modules.srm.entity.PurPayPlan">
        SELECT
            sum(pay_amount_cope) as pay_amount_cope,
            sum(pay_amount_usd) as pay_amount_usd,
            sum(pay_amount_jpy) as pay_amount_jpy,
            sum(pay_amount_eur) as pay_amount_eur
        FROM
            pur_pay_plan ppp
            inner join (
                select distinct pppd.pay_plan_id,ppa.contract_id,cb.contract_number,cb.contract_name
                from pur_pay_plan_detail pppd
                inner join pur_pay_apply ppa on ppa.id = pppd.pay_apply_id
                inner join contract_base cb on ppa.contract_id = cb.id
                where pppd.del_flag = '0'
                <if test="query.categoryId != null and query.categoryId != ''">
                    AND cb.category_id = #{query.categoryId}
                </if>
                <if test="query.suppId != null and query.suppId != ''">
                    AND cb.contract_second_party_id = #{query.suppId}
                </if>
                group by pppd.pay_plan_id
            ) pppd on ppp.id = pppd.pay_plan_id
        where del_flag = '0'
        <if test="query.contractName != null and query.contractName != ''">
            AND pppd.contract_name LIKE concat(concat('%',#{query.contractName}),'%')
        </if>
        <if test="query.contractNumber != null and query.contractNumber != ''">
            AND pppd.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.code != null and query.code != ''">
            AND ppp.code LIKE concat(concat('%',#{query.code}),'%')
        </if>
        <if test="query.payStatus !=null and query.payStatus != ''">
            and ppp.pay_status in
            <foreach collection="query.payStatus.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        <if test="query.planMonth !=null and query.planMonth != ''">
            and ppp.plan_month = #{query.planMonth}
        </if>
        <if test="query.auth == 'owner'">
            AND ppp.create_user = #{query.auther}
        </if>
        <if test="query.auth == 'dept'">
            AND (select depart_ids from sys_user su where ppp.create_user = su.username) = #{query.auther}
        </if>
        <if test="query.auth == 'subject'">
            AND pppd.contract_first_party_id in
            <foreach collection="query.auther.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
    </select>

    <select id="fetchPayAmountByProjId" resultType="com.cmoc.modules.srm.entity.PurPayPlan">
        select
        <if test="query.unit == 'wy'">
           round(sum(tmp.pay_amount_cope) / 10000,2) as pay_amount_cope
        </if>
        <if test="query.unit != 'wy'">
            sum(tmp.pay_amount_cope) as pay_amount_cope
        </if>
        from (

            SELECT
            sum(CASE
             WHEN cb.contract_currency != 'RMB' THEN
             ifnull( sibe.contract_amount_tax_local + sibe.other_amount_local, ppad.pay_amount ) ELSE ppad.pay_amount
             END
            ) pay_amount_cope
            FROM
            (
                SELECT
                    ppa.contract_id,
                    sum( ppad.contract_amount_tax_local ) AS pay_amount,
                    sum( ppad.contract_amount_tax ) AS pay_amount_other,
                    ppad.bill_detail_id
                FROM
                    pur_pay_apply_detail ppad
                    INNER JOIN pur_pay_plan_detail pppd ON ppad.apply_id = pppd.pay_apply_id
                    INNER JOIN pur_pay_plan ppp ON pppd.pay_plan_id = ppp.id
                    INNER JOIN pur_pay_apply ppa ON ppad.apply_id = ppa.id
                WHERE
                    ppad.del_flag = '0'
                    <if test="query.source == 'benyue'">
                        <if test='query.payStatus != "2"'>
                            and ppp.plan_month = #{query.startMonth}
                        </if>
                        <if test='query.payStatus == "2"'>
                            and SUBSTR(ppp.pay_time,1,7) = #{query.startMonth}
                            and ppp.pay_status = '2'
                        </if>
                    </if>
                    <if test="query.source != 'benyue'">
                        <if test="query.source == 'twelve'">
                            and SUBSTR(ppp.pay_time,1,7) between #{query.startMonth} and #{query.endMonth}
                        </if>
                        and ppp.pay_status = '2'
                    </if>
                GROUP BY
                    ppa.contract_id,
                    ppad.bill_detail_id
            ) ppad
            INNER JOIN contract_base cb ON ppad.contract_id = cb.id
            LEFT JOIN stk_io_bill_entry sibe ON ppad.bill_detail_id = sibe.order_detail_id
            AND sibe.del_flag = '0'
            where 1=1
            <if test="query.projectId != null and query.projectId != ''">
                and cb.project_id = #{query.projectId}
            </if>
            <if test="query.subject != null and query.subject != ''">
                and cb.contract_first_party_id = #{query.subject}
            </if>
            union all
            select
                   sum(pcp.pay_amount) as pay_amount_cope
            from
                 project_category_pay pcp
                INNER JOIN proj_base pb on pcp.project_id = pb.id
            where
                pcp.del_flag = '0'
            and pcp.type = '1'
            <if test="query.projectId != null and query.projectId != ''">
                and pcp.project_id = #{query.projectId}
            </if>
            <if test="query.subject != null and query.subject != ''">
                and pb.subject = #{query.subject}
            </if>
            <if test="query.source == 'benyue' || query.source == 'twelve'">
                and pcp.id = 'null'
            </if>
        ) tmp

    </select>

    <select id="queryPageList" resultType="com.cmoc.modules.srm.entity.PurPayPlan">
        select
            distinct
            ppp.*,
            pppd.contract_number,
            pppd.contract_name,
            pppd.contract_id
        from
             pur_pay_plan ppp
             inner join (
                select pppd.pay_plan_id,ppa.contract_id,cb.contract_number,cb.contract_name,cb.contract_first_party_id
                from pur_pay_plan_detail pppd
                inner join pur_pay_apply ppa on ppa.id = pppd.pay_apply_id
                inner join contract_base cb on ppa.contract_id = cb.id
                where pppd.del_flag = '0'
                <if test="query.categoryId != null and query.categoryId != ''">
                    AND cb.category_id = #{query.categoryId}
                </if>
                <if test="query.suppId != null and query.suppId != ''">
                    AND cb.contract_second_party_id = #{query.suppId}
                </if>
                group by pppd.pay_plan_id
             ) pppd on ppp.id = pppd.pay_plan_id
        where
             ppp.del_flag = '0'
        <if test="query.contractName != null and query.contractName != ''">
            AND pppd.contract_name LIKE concat(concat('%',#{query.contractName}),'%')
        </if>
        <if test="query.contractNumber != null and query.contractNumber != ''">
            AND pppd.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.code != null and query.code != ''">
            AND ppp.code LIKE concat(concat('%',#{query.code}),'%')
        </if>
        <if test="query.payStatus !=null and query.payStatus != ''">
            and ppp.pay_status in
            <foreach collection="query.payStatus.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        <if test="query.planMonth !=null and query.planMonth != ''">
            and ppp.plan_month = #{query.planMonth}
        </if>
        <if test="query.auth == 'owner'">
            AND ppp.create_user = #{query.auther}
        </if>
        <if test="query.auth == 'dept'">
            AND (select depart_ids from sys_user su where ppp.create_user = su.username) = #{query.auther}
        </if>
        <if test="query.auth == 'subject'">
            AND pppd.contract_first_party_id in
            <foreach collection="query.auther.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>


        <if test="query.column != null and query.column != ''">
            <if test="query.column == 'code'">
                order by ppp.code
            </if>
            <if test="query.column == 'contractName'">
                order by pppd.contract_name
            </if>
            <if test="query.column == 'contractNumber'">
                order by pppd.contract_number
            </if>
            <if test="query.column == 'planMonth'">
                order by ppp.plan_month
            </if>
            <if test="query.column == 'payAmountCope'">
                order by ppp.pay_amount_cope
            </if>
            <if test="query.column == 'payAmountUsd'">
                order by ppp.pay_amount_usd
            </if>
            <if test="query.column == 'payAmountJpy'">
                order by ppp.pay_amount_jpy
            </if>
            <if test="query.column == 'payAmountEur'">
                order by ppp.pay_amount_eur
            </if>

            <if test="query.column == 'payStatus'">
                order by ppp.pay_status
            </if>
            <if test="query.column == 'createUser'">
                order by ppp.create_user
            </if>

            <if test="query.column == 'createTime'">
                order by ppp.create_time
            </if>
            <if test="query.order == 'asc'">
                asc
            </if>
            <if test="query.order == 'desc'">
                desc
            </if>
        </if>
    </select>

    <select id="fetchPlanAmount" resultType="com.cmoc.modules.srm.entity.PurPayPlan">
        SELECT
            sum(ppa.pay_amount) as pay_amount_cope,
            ppp.plan_month
        FROM
            pur_pay_plan ppp
            INNER JOIN pur_pay_plan_detail pppd ON ppp.id = pppd.pay_plan_id
            INNER JOIN pur_pay_apply ppa ON pppd.pay_apply_id = ppa.id
            INNER JOIN proj_base pb on ppa.project_id = pb.id
        WHERE
            ppa.del_flag = '0'
          AND pppd.del_flag = '0'
          AND ppp.plan_month between #{query.startMonth} and #{query.endMonth}
        <if test="query.code != null and query.code != ''">
            AND ppp.code LIKE concat(concat('%',#{query.code}),'%')
        </if>
          <if test="query.id != null and query.id != ''">
            AND ppa.project_id = #{query.id}
          </if>
          <if test="query.deptId != null and query.deptId != ''">
            AND pb.apply_org_id = #{query.deptId}
          </if>
        <if test="query.subject != null and query.subject != ''">
            AND pb.subject in
            <foreach collection="query.subject.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
          group by ppp.plan_month
    </select>

    <select id="fetchPageList" resultType="com.cmoc.modules.srm.entity.PurPayPlan">
        SELECT
            ppa.pay_amount_other as pay_amount,
            ppp.plan_month,
            ppp.code
        FROM
            pur_pay_plan ppp
            INNER JOIN pur_pay_plan_detail pppd ON ppp.id = pppd.pay_plan_id
            INNER JOIN pur_pay_apply ppa ON pppd.pay_apply_id = ppa.id
        WHERE
            ppa.del_flag = '0'
          AND pppd.del_flag = '0'
          AND ppa.contract_id = #{query.contractId}
    </select>

    <select id="fetchPayProgressPageList" resultType="com.cmoc.modules.srm.vo.PayProgress">
        SELECT
            pb.proj_name,
            coq.prod_name,
            coq.prod_brand as brand_name,
            sup.name as supp_name,
            coq.prod_spec_type spe_type,
            count(distinct coq.sort) as qty,
            ppa.pay_type,
            round(ifnull(ppa.pay_rate,0),0) as pay_rate,
            sum(ppa.pay_rate * coq.contract_amount_tax / 100) as pay_amount,
            cb.contract_currency,
            cb.contract_number,
            cb.contract_name,
            ppp.process_code,
            ppp.process_create_time,
            ppp.process_node,
            ppp.process_status,
            bm.country
        FROM
            pur_pay_plan ppp
            inner join pur_pay_plan_detail pppd on ppp.id = pppd.pay_plan_id
            inner join pur_pay_apply ppa on pppd.pay_apply_id = ppa.id
            inner join pur_pay_apply_detail ppad on ppa.id = ppad.apply_id
            inner join contract_object_qty coq on ppad.bill_detail_id = coq.id
            inner join contract_base cb on coq.contract_id = cb.id
            inner join bas_supplier sup on cb.contract_second_party_id = sup.id
            inner join proj_base pb on ppa.project_id = pb.id
            left join bas_material bm on coq.prod_code = bm.code
        where ppp.del_flag = '0'
          and pppd.del_flag = '0'
          and ppad.del_flag = '0'
        <if test="query.contractNumber != null and query.contractNumber != ''">
            and cb.contract_number
            LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.contractName != null and query.contractName != ''">
            and cb.contract_name
            LIKE concat(concat('%',#{query.contractName}),'%')
        </if>
        <if test="query.country != null and query.country != ''">
            and bm.country
            LIKE concat(concat('%',#{query.country}),'%')
        </if>
        <if test="query.projName != null and query.projName != ''">
            and pb.proj_name
            LIKE concat(concat('%',#{query.projName}),'%')
        </if>
        <if test="query.prodName != null and query.prodName != ''">
            and coq.prod_name
            LIKE concat(concat('%',#{query.prodName}),'%')
        </if>
        <if test="query.suppName != null and query.suppName != ''">
            and sup.name
            LIKE concat(concat('%',#{query.suppName}),'%')
        </if>
        <if test="query.speType != null and query.speType != ''">
            and coq.prod_spec_type
            LIKE concat(concat('%',#{query.speType}),'%')
        </if>
        group by ppp.id,coq.prod_code,ppa.project_id
        <if test="query.column != null and query.column != ''">
            <if test="query.column == 'contractNumber'">
                order by cb.contract_number
            </if>
            <if test="query.column == 'contractName'">
                order by cb.contract_name
            </if>
            <if test="query.column == 'projName'">
                order by pb.proj_name
            </if>
            <if test="query.column == 'prodName'">
                order by coq.prod_name
            </if>
            <if test="query.column == 'brandName'">
                order by coq.prod_brand
            </if>
            <if test="query.column == 'suppName'">
                order by sup.name
            </if>
            <if test="query.column == 'speType'">
                order by coq.prod_spec_type
            </if>
            <if test="query.column == 'country'">
                order by bm.country
            </if>
            <if test="query.column == 'qty'">
                order by sum(coq.qty)
            </if>
            <if test="query.column == 'payType'">
                order by ppa.pay_type
            </if>

            <if test="query.column == 'processCode'">
                order by ppp.process_code
            </if>
            <if test="query.column == 'processCreateTime'">
                order by ppp.process_create_time
            </if>
            <if test="query.column == 'processStatus'">
                order by ppp.process_status
            </if>
            <if test="query.column == 'processNode'">
                order by ppp.process_node
            </if>

            <if test="query.column == 'createTime'">
                order by cb.create_time
            </if>
            <if test="query.order == 'asc'">
                asc
            </if>
            <if test="query.order == 'desc'">
                desc
            </if>

        </if>
    </select>

    <select id="fetchPlanByYear" resultType="map">
        SELECT
            count(1) as num,
            plan_month as `month`
        FROM
            pur_pay_plan ppp
        where del_flag = '0'
        and plan_month between #{query.startMonth} and #{query.endMonth}
        and exists(
            select pppd.pay_plan_id from
            pur_pay_plan_detail pppd
            inner join pur_pay_apply ppa on pppd.pay_apply_id = ppa.id
            where pppd.del_flag = '0'
            and ppa.del_flag = '0'
            and pppd.pay_plan_id = ppp.id
            <if test="query.projId !=null and query.projId != ''">
                and ppa.project_id = #{query.projId}
            </if>
        )
        group by plan_month
        order by plan_month
    </select>

    <select id="fetchCompletePlanByYear" resultType="map">
        SELECT
            count(1) as num,
            SUBSTR(pay_time,1,7) as `month`
        FROM
            pur_pay_plan ppp
        where del_flag = '0'
          and SUBSTR(pay_time,1,7) between #{query.startMonth} and #{query.endMonth}
          and pay_status = '2'
          and exists(
            select pppd.pay_plan_id from
            pur_pay_plan_detail pppd
            inner join pur_pay_apply ppa on pppd.pay_apply_id = ppa.id
            where pppd.del_flag = '0'
            and ppa.del_flag = '0'
            and pppd.pay_plan_id = ppp.id
            <if test="query.projId !=null and query.projId != ''">
                and ppa.project_id = #{query.projId}
            </if>
          )
        group by SUBSTR(pay_time,1,7)
        order by SUBSTR(pay_time,1,7)
    </select>

    <select id="fetchProjAmountByMonth" resultType="com.cmoc.modules.srm.vo.AmountPlanToYear">
        SELECT
            ppa.project_name AS title,
            SUBSTR(ppp.pay_time,1,7) AS `month`,
            sum( ppa.pay_amount ) AS pay_amount,
            ppa.project_id AS proj_id
        FROM
            pur_pay_plan ppp
            INNER JOIN pur_pay_plan_detail pppd ON ppp.id = pppd.pay_plan_id
            INNER JOIN pur_pay_apply ppa ON pppd.pay_apply_id = ppa.id
        WHERE
            ppp.pay_status = '2'
            and SUBSTR(ppp.pay_time,1,7) between #{query.startMonth} and #{query.endMonth}
            <if test="query.projId != null and query.projId != ''">
                and ppa.project_id in
                <foreach collection="query.projId.split(',')" item="item" open="(" close=")" separator="," >
                    #{item}
                </foreach>
            </if>
        GROUP BY
            ppa.project_id,
            SUBSTR(ppp.pay_time,1,7)
        order by SUBSTR(ppp.pay_time,1,7)
    </select>

    <select id="fetchPlanProjAmountByMonth" resultType="com.cmoc.modules.srm.vo.AmountPlanToYear">
        SELECT
        ppa.project_name AS title,
        plan_month AS `month`,
        sum( ppa.pay_amount ) AS pay_amount,
        ppa.project_id AS proj_id
        FROM
        pur_pay_plan ppp
        INNER JOIN pur_pay_plan_detail pppd ON ppp.id = pppd.pay_plan_id
        INNER JOIN pur_pay_apply ppa ON pppd.pay_apply_id = ppa.id
        WHERE
        ppp.plan_month between #{query.startMonth} and #{query.endMonth}
        <if test="query.projId != null and query.projId != ''">
            and ppa.project_id in
            <foreach collection="query.projId.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        GROUP BY
        ppa.project_id,
        ppp.plan_month
        order by ppp.plan_month
    </select>

    <select id="fetchGroupAmountPlanPageList" resultType="com.cmoc.modules.srm.entity.PurPayApply">
        SELECT
            ppad.contract_amount_tax AS pay_amount,
            ppa.currency,
            ppa.pay_method
        FROM
            pur_pay_plan ppp
            INNER JOIN pur_pay_plan_detail pppd ON ppp.id = pppd.pay_plan_id
            INNER JOIN pur_pay_apply_detail ppad ON pppd.pay_apply_id = ppad.apply_id
            INNER JOIN pur_pay_apply ppa on ppad.apply_id = ppa.id
            INNER JOIN contract_object_qty coq on ppad.bill_detail_id = coq.id
            left join contract_base cb on coq.contract_id = cb.id
            left join bas_material bm on coq.prod_code = bm.`code`
        WHERE
        ppad.del_flag = '0'
        <if test="query.month != null and query.month != ''">
            and ppp.plan_month = #{query.month}
        </if>
        <if test="query.projName != null and query.projName != ''">
            and ppa.project_name
            LIKE concat(concat('%',#{query.projName}),'%')
        </if>
        <if test="query.categoryId != null and query.categoryId != ''">
            and cb.category_id = #{query.categoryId}
        </if>
        <if test="query.subject != null and query.subject != ''">
            and cb.contract_first_party
            LIKE concat(concat('%',#{query.subject}),'%')
        </if>
        <if test="query.suppName != null and query.suppName != ''">
            and cb.contract_second_party
            LIKE concat(concat('%',#{query.suppName}),'%')
        </if>
        <if test="query.country != null and query.country != ''">
            and bm.country
            LIKE concat(concat('%',#{query.country}),'%')
        </if>
        <if test="query.model != null and query.model != ''">
            and bm.model = #{query.model}
        </if>
    </select>

    <select id="fetchProjAmountBar" resultType="com.cmoc.modules.srm.vo.AmountPlanToYear">
        SELECT
            SUBSTR( ppp.pay_time, 1, 7 ) AS `month`,
            sum( ppa.pay_amount ) AS pay_amount
        FROM
            pur_pay_plan ppp
            INNER JOIN pur_pay_plan_detail pppd ON ppp.id = pppd.pay_plan_id
            INNER JOIN pur_pay_apply ppa ON pppd.pay_apply_id = ppa.id
            INNER JOIN proj_base pb on ppa.project_id = pb.id
        WHERE
        ppp.pay_status = '2'
        and SUBSTR(ppp.pay_time,1,7) between #{query.startMonth} and #{query.endMonth}
        <if test="query.projId != null and query.projId != ''">
            and ppa.project_id in
            <foreach collection="query.projId.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        <if test="query.subject != null and query.subject != ''">
            and pb.subject = #{query.subject}
        </if>
        GROUP BY
        SUBSTR( ppp.pay_time, 1, 7 )
        order by SUBSTR( ppp.pay_time, 1, 7 )
    </select>

    <select id="fetchProjAmountRound" resultType="map">
        SELECT
            sum( ppa.pay_amount ) AS `value`,
            ppa.project_name as `name`
        FROM
            pur_pay_plan ppp
            INNER JOIN pur_pay_plan_detail pppd ON ppp.id = pppd.pay_plan_id
            INNER JOIN pur_pay_apply ppa ON pppd.pay_apply_id = ppa.id
            INNER JOIN proj_base pb on ppa.project_id = pb.id
        WHERE
            ppp.pay_status = '2'
            and SUBSTR(ppp.pay_time,1,7) between #{query.startMonth} and #{query.endMonth}
            <if test="query.projId != null and query.projId != ''">
                and ppa.project_id in
                <foreach collection="query.projId.split(',')" item="item" open="(" close=")" separator="," >
                    #{item}
                </foreach>
            </if>
            <if test="query.subject != null and query.subject != ''">
                and pb.subject = #{query.subject}
            </if>
        GROUP BY
            ppa.project_id
    </select>

    <select id="fetchAmountPlanPageList" resultType="com.cmoc.modules.srm.vo.AmountPlan">
        SELECT
            cb.contract_first_party as subject,
            cb.contract_second_party_id as supp_id,
            cb.contract_second_party as supp_name,
            pb.proj_name,
            bm.model,
            bm.country,
            cb.contract_number,
            co.prod_code,
            co.prod_name,
            co.prod_spec_type as spe_type,
            co.qty,
            co.contract_price_tax,
            co.contract_amount_tax,
            cb.contract_currency,
            GROUP_CONCAT(ppad.lead_time SEPARATOR ';') as lead_time,
            sum(ppad.pay_amount) as pay_amount,
            sum(ppad.pay_amount_local) as pay_amount_local,
            GROUP_CONCAT(ppad.pay_rate SEPARATOR ';') as pay_rate,
            GROUP_CONCAT(ppad.pay_type SEPARATOR ';') as pay_type,
            GROUP_CONCAT(ppad.pay_method SEPARATOR ';') as pay_method,
            ppad.pay_qty,
            GROUP_CONCAT(ppad.sort SEPARATOR ';') as sort,
            GROUP_CONCAT(ppad.is_contract SEPARATOR ';') as is_contract,
            GROUP_CONCAT(ppad.is_send SEPARATOR ';') as is_send,
            GROUP_CONCAT(ppad.is_check SEPARATOR ';') as is_check,
            GROUP_CONCAT(ppad.is_receive SEPARATOR ';') as is_receive,
            GROUP_CONCAT(ppad.is_qa SEPARATOR ';') as is_qa,
            GROUP_CONCAT(ppad.is_progress SEPARATOR ';') as is_progress,
            GROUP_CONCAT(ppad.is_settle SEPARATOR ';') as is_settle,
            GROUP_CONCAT(ppad.is_qa_due SEPARATOR ';') as is_qa_due,
            GROUP_CONCAT(ppad.is_invoice SEPARATOR ';') as is_invoice

        FROM
            (
                SELECT
                    sum(round(coq.contract_amount_tax  * ppa.pay_rate / 100,2)) AS pay_amount,
                    sum(round(coq.contract_amount_tax_local * ppa.pay_rate / 100,2)) as pay_amount_local,
                    coq.contract_id,
                    coq.record_id,
                    DATE_FORMAT(ppad.plan_lead_time,'%Y-%m-%d')  as lead_time,
                    ppa.pay_type pay_type,
                    ppa.pay_method,
                    ppa.pay_rate,
                    ppa.id,
                    GROUP_CONCAT(coq.sort SEPARATOR ',') as sort,
                    ppa.is_contract,
                    ppa.is_send,
                    ppa.is_check,
                    ppa.is_receive,
                    ppa.is_qa,
                    ppa.is_progress,
                    ppa.is_settle,
                    ppa.is_qa_due,
                    ppa.is_invoice,
                    count(coq.sort) as pay_qty
                FROM
                    pur_pay_plan ppp
                    INNER JOIN pur_pay_plan_detail pppd ON ppp.id = pppd.pay_plan_id
                    INNER JOIN pur_pay_apply_detail ppad ON pppd.pay_apply_id = ppad.apply_id
                    INNER JOIN pur_pay_apply ppa on ppad.apply_id = ppa.id
                    INNER JOIN contract_object_qty coq on ppad.bill_detail_id = coq.id
                WHERE
                    ppad.del_flag = '0'
                    and pppd.del_flag = '0'
                    <if test="query.month != null and query.month != ''">
                        and ppp.plan_month = #{query.month}
                    </if>
                group by coq.contract_id,coq.record_id,ppa.id
            ) ppad
            left join contract_object co on co.id = ppad.record_id
            left join contract_base cb on co.contract_id = cb.id
            left join proj_base pb on cb.project_id = pb.id
            left join bas_material bm on co.prod_code = bm.`code`
            where 1=1
            <if test="query.projName != null and query.projName != ''">
                and pb.proj_name
                LIKE concat(concat('%',#{query.projName}),'%')
            </if>
            <if test="query.projectId != null and query.projectId != ''">
                and pb.id in
                <foreach collection="query.projectId.split(',')" item="item" open="(" close=")" separator="," >
                    #{item}
                </foreach>
            </if>
            <if test="query.subject != null and query.subject != ''">
                and cb.contract_first_party
                LIKE concat(concat('%',#{query.subject}),'%')
            </if>
            <if test="query.suppName != null and query.suppName != ''">
                and cb.contract_second_party
                LIKE concat(concat('%',#{query.suppName}),'%')
            </if>
            <if test="query.country != null and query.country != ''">
                and bm.country
                LIKE concat(concat('%',#{query.country}),'%')
            </if>
            <if test="query.model != null and query.model != ''">
                and bm.model = #{query.model}
            </if>
            group by ppad.contract_id,ppad.record_id
            <if test="query.column != null and query.column != ''">
                <if test="query.column == 'categoryName'">
                    order by pc.`name`
                </if>
                <if test="query.column == 'subject'">
                    order by cb.contract_first_party
                </if>
                <if test="query.column == 'suppName'">
                    order by cb.contract_second_party
                </if>
                <if test="query.column == 'projName'">
                    order by pb.proj_name
                </if>
                <if test="query.column == 'model'">
                    order by bm.model
                </if>
                <if test="query.column == 'contractNumber'">
                    order by cb.contract_number
                </if>
                <if test="query.column == 'prodName'">
                    order by co.prod_name
                </if>
                <if test="query.column == 'speType'">
                    order by co.prod_spec_type
                </if>
                <if test="query.column == 'country'">
                    order by bm.country
                </if>
                <if test="query.column == 'qty'">
                    order by co.qty
                </if>
                <if test="query.column == 'payQty'">
                    order by ppad.pay_qty
                </if>
                <if test="query.column == 'contractPriceTax'">
                    order by co.contract_price_tax
                </if>
                <if test="query.column == 'contractAmountTax'">
                    order by co.contract_amount_tax
                </if>
                <if test="query.column == 'payMethod'">
                    order by ppad.pay_method
                </if>
                <if test="query.column == 'payType'">
                    order by ppad.pay_type
                </if>
                <if test="query.column == 'payAmount'">
                    order by ppad.pay_amount
                </if>
                <if test="query.column == 'payAmountLocal'">
                    order by ppad.pay_amount_local
                </if>

                <if test="query.order == 'asc'">
                    asc
                </if>
                <if test="query.order == 'desc'">
                    desc
                </if>

            </if>

    </select>

    <select id="exportPayProgressPageList" resultType="com.cmoc.modules.srm.vo.PayProgress">
        SELECT
        pb.proj_name,
        coq.prod_name,
        coq.prod_brand as brand_name,
        sup.name as supp_name,
        coq.prod_spec_type spe_type,
        count(distinct coq.sort) as qty,
        ppa.pay_type,
        round(ifnull(ppa.pay_rate,0),0) as pay_rate,
        round(sum(ppa.pay_rate * coq.contract_amount_tax / 100),2) as pay_amount,
        cb.contract_currency,
        cb.contract_number,
        cb.contract_name,
        ppp.process_code,
        ppp.process_create_time,
        ppp.process_node,
        ppp.process_status,
        bm.country
        FROM
        pur_pay_plan ppp
        inner join pur_pay_plan_detail pppd on ppp.id = pppd.pay_plan_id
        inner join pur_pay_apply ppa on pppd.pay_apply_id = ppa.id
        inner join pur_pay_apply_detail ppad on ppa.id = ppad.apply_id
        inner join contract_object_qty coq on ppad.bill_detail_id = coq.id
        inner join contract_base cb on coq.contract_id = cb.id
        inner join bas_supplier sup on cb.contract_second_party_id = sup.id
        inner join proj_base pb on ppa.project_id = pb.id
        left join bas_material bm on coq.prod_code = bm.code
        where ppp.del_flag = '0'
        and pppd.del_flag = '0'
        <if test="query.contractNumber != null and query.contractNumber != ''">
            and cb.contract_number
            LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.contractName != null and query.contractName != ''">
            and cb.contract_name
            LIKE concat(concat('%',#{query.contractName}),'%')
        </if>
        <if test="query.country != null and query.country != ''">
            and bm.country
            LIKE concat(concat('%',#{query.country}),'%')
        </if>
        <if test="query.projName != null and query.projName != ''">
            and pb.proj_name
            LIKE concat(concat('%',#{query.projName}),'%')
        </if>
        <if test="query.prodName != null and query.prodName != ''">
            and coq.prod_name
            LIKE concat(concat('%',#{query.prodName}),'%')
        </if>
        <if test="query.suppName != null and query.suppName != ''">
            and sup.name
            LIKE concat(concat('%',#{query.suppName}),'%')
        </if>
        <if test="query.speType != null and query.speType != ''">
            and coq.prod_spec_type
            LIKE concat(concat('%',#{query.speType}),'%')
        </if>
        group by ppp.id,coq.prod_code,ppa.project_id
        <if test="query.column != null and query.column != ''">
            <if test="query.column == 'contractNumber'">
                order by cb.contract_number
            </if>
            <if test="query.column == 'contractName'">
                order by cb.contract_name
            </if>
            <if test="query.column == 'projName'">
                order by pb.proj_name
            </if>
            <if test="query.column == 'prodName'">
                order by coq.prod_name
            </if>
            <if test="query.column == 'brandName'">
                order by coq.prod_brand
            </if>
            <if test="query.column == 'suppName'">
                order by sup.name
            </if>
            <if test="query.column == 'speType'">
                order by coq.prod_spec_type
            </if>
            <if test="query.column == 'country'">
                order by bm.country
            </if>
            <if test="query.column == 'qty'">
                order by sum(coq.qty)
            </if>
            <if test="query.column == 'payType'">
                order by ppa.pay_type
            </if>

            <if test="query.column == 'processCode'">
                order by ppp.process_code
            </if>
            <if test="query.column == 'processCreateTime'">
                order by ppp.process_create_time
            </if>
            <if test="query.column == 'processStatus'">
                order by ppp.process_status
            </if>
            <if test="query.column == 'processNode'">
                order by ppp.process_node
            </if>

            <if test="query.column == 'createTime'">
                order by cb.create_time
            </if>
            <if test="query.order == 'asc'">
                asc
            </if>
            <if test="query.order == 'desc'">
                desc
            </if>

        </if>
    </select>

    <select id="exportAmountPlanPageList" resultType="com.cmoc.modules.srm.vo.AmountPlan">
        SELECT
        cb.contract_first_party as subject,
        cb.contract_second_party_id as supp_id,
        cb.contract_second_party as supp_name,
        pb.proj_name,
        bm.model,
        bm.country,
        cb.contract_number,
        co.prod_code,
        co.prod_name,
        co.prod_spec_type as spe_type,
        co.qty,
        co.contract_price_tax,
        co.contract_amount_tax,
        cb.contract_currency,
        GROUP_CONCAT(ppad.lead_time SEPARATOR ';') as lead_time,
        sum(ppad.pay_amount) as pay_amount,
        sum(ppad.pay_amount_local) as pay_amount_local,
        GROUP_CONCAT(ppad.pay_rate SEPARATOR ';') as pay_rate,
        GROUP_CONCAT(ppad.pay_type SEPARATOR ';') as pay_type,
        GROUP_CONCAT(ppad.pay_method SEPARATOR ';') as pay_method,
        ppad.pay_qty,
        GROUP_CONCAT(ppad.sort SEPARATOR ';') as sort,
        GROUP_CONCAT(ppad.is_contract SEPARATOR ';') as is_contract,
        GROUP_CONCAT(ppad.is_send SEPARATOR ';') as is_send,
        GROUP_CONCAT(ppad.is_check SEPARATOR ';') as is_check,
        GROUP_CONCAT(ppad.is_receive SEPARATOR ';') as is_receive,
        GROUP_CONCAT(ppad.is_qa SEPARATOR ';') as is_qa,
        GROUP_CONCAT(ppad.is_progress SEPARATOR ';') as is_progress,
        GROUP_CONCAT(ppad.is_settle SEPARATOR ';') as is_settle,
        GROUP_CONCAT(ppad.is_qa_due SEPARATOR ';') as is_qa_due,
        GROUP_CONCAT(ppad.is_invoice SEPARATOR ';') as is_invoice

        FROM
        (
        SELECT
        sum(round(coq.contract_amount_tax  * ppa.pay_rate / 100,2)) AS pay_amount,
        sum(round(coq.contract_amount_tax_local * ppa.pay_rate / 100,2)) as pay_amount_local,
        coq.contract_id,
        coq.record_id,
        DATE_FORMAT(ppad.plan_lead_time,'%Y-%m-%d')  as lead_time,
        ppa.pay_type pay_type,
        ppa.pay_method,
        round(ppa.pay_rate,0) as pay_rate,
        ppa.id,
        GROUP_CONCAT(coq.sort SEPARATOR ',') as sort,
        ppa.is_contract,
        ppa.is_send,
        ppa.is_check,
        ppa.is_receive,
        ppa.is_qa,
        ppa.is_progress,
        ppa.is_settle,
        ppa.is_qa_due,
        ppa.is_invoice,
        count(coq.sort) as pay_qty
        FROM
        pur_pay_plan ppp
        INNER JOIN pur_pay_plan_detail pppd ON ppp.id = pppd.pay_plan_id
        INNER JOIN pur_pay_apply_detail ppad ON pppd.pay_apply_id = ppad.apply_id
        INNER JOIN pur_pay_apply ppa on ppad.apply_id = ppa.id
        INNER JOIN contract_object_qty coq on ppad.bill_detail_id = coq.id
        WHERE
        ppad.del_flag = '0'
        and pppd.del_flag = '0'
        <if test="query.month != null and query.month != ''">
            and ppp.plan_month = #{query.month}
        </if>
        group by coq.contract_id,coq.record_id,ppa.id
        ) ppad
        left join contract_object co on co.id = ppad.record_id
        left join contract_base cb on co.contract_id = cb.id
        left join proj_base pb on cb.project_id = pb.id
        left join bas_material bm on co.prod_code = bm.`code`
        where 1=1
        <if test="query.projName != null and query.projName != ''">
            and pb.proj_name
            LIKE concat(concat('%',#{query.projName}),'%')
        </if>
        <if test="query.projectId != null and query.projectId != ''">
            and pb.id in
            <foreach collection="query.projectId.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        <if test="query.subject != null and query.subject != ''">
            and cb.contract_first_party
            LIKE concat(concat('%',#{query.subject}),'%')
        </if>
        <if test="query.suppName != null and query.suppName != ''">
            and cb.contract_second_party
            LIKE concat(concat('%',#{query.suppName}),'%')
        </if>
        <if test="query.country != null and query.country != ''">
            and bm.country
            LIKE concat(concat('%',#{query.country}),'%')
        </if>
        <if test="query.model != null and query.model != ''">
            and bm.model = #{query.model}
        </if>
        group by ppad.contract_id,ppad.record_id
        <if test="query.column != null and query.column != ''">
            <if test="query.column == 'categoryName'">
                order by pc.`name`
            </if>
            <if test="query.column == 'subject'">
                order by cb.contract_first_party
            </if>
            <if test="query.column == 'suppName'">
                order by cb.contract_second_party
            </if>
            <if test="query.column == 'projName'">
                order by pb.proj_name
            </if>
            <if test="query.column == 'model_dictText'">
                order by bm.model
            </if>
            <if test="query.column == 'contractNumber'">
                order by cb.contract_number
            </if>
            <if test="query.column == 'prodName'">
                order by co.prod_name
            </if>
            <if test="query.column == 'speType'">
                order by co.prod_spec_type
            </if>
            <if test="query.column == 'country'">
                order by bm.country
            </if>
            <if test="query.column == 'qty'">
                order by co.qty
            </if>
            <if test="query.column == 'payQty'">
                order by ppad.pay_qty
            </if>
            <if test="query.column == 'contractPriceTax'">
                order by co.contract_price_tax
            </if>
            <if test="query.column == 'contractAmountTax'">
                order by co.contract_amount_tax
            </if>
            <if test="query.column == 'payMethod_dictText'">
                order by ppad.pay_method
            </if>
            <if test="query.column == 'payType_dictText'">
                order by ppad.pay_type
            </if>
            <if test="query.column == 'payAmount'">
                order by ppad.pay_amount
            </if>
            <if test="query.column == 'payAmountLocal'">
                order by ppad.pay_amount_local
            </if>

            <if test="query.order == 'asc'">
                asc
            </if>
            <if test="query.order == 'desc'">
                desc
            </if>

        </if>
    </select>

    <select id="fetchDetailList" resultType="com.cmoc.modules.srm.entity.PurPayPlanDetail">
        SELECT DISTINCT
            pppd.pay_apply_id,
            ppa.contract_id,
            ppa.pay_method,
            ppa.pay_type,
            ppa.pay_rate
        FROM
            pur_pay_plan_detail pppd
            INNER JOIN pur_pay_apply ppa ON pppd.pay_apply_id = ppa.id
        WHERE
            pppd.del_flag = '0'
           and pppd.pay_plan_id = #{query.id}
    </select>

    <select id="fetchPlanProjAmount" resultType="com.cmoc.modules.srm.vo.AmountPlanToYear">
        SELECT
        plan_month AS `month`,
        sum( ppa.pay_amount ) AS pay_amount
        FROM
        pur_pay_plan ppp
        INNER JOIN pur_pay_plan_detail pppd ON ppp.id = pppd.pay_plan_id
        INNER JOIN pur_pay_apply ppa ON pppd.pay_apply_id = ppa.id
        WHERE
        ppp.plan_month between #{query.startMonth} and #{query.endMonth}
        <if test="query.projId and query.projId != ''">
            and ppa.project_id in
            <foreach collection="query.projId.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        GROUP BY
        ppp.plan_month
        order by ppp.plan_month
    </select>

    <select id="fetchPlanProjChildAmountByMonth" resultType="com.cmoc.modules.srm.vo.AmountPlanToYear">
        SELECT
        bm.model AS title,
        plan_month AS `month`,
        sum( round(coq.contract_amount_tax_local * ppa.pay_rate / 100,2) ) AS pay_amount,
        ppa.project_id AS proj_id
        FROM
        pur_pay_plan ppp
        INNER JOIN pur_pay_plan_detail pppd ON ppp.id = pppd.pay_plan_id
        INNER JOIN pur_pay_apply ppa ON pppd.pay_apply_id = ppa.id
        INNER JOIN pur_pay_apply_detail ppad on ppa.id = ppad.apply_id
        INNER JOIN contract_object_qty coq on ppad.bill_detail_id = coq.id
        INNER JOIN bas_material bm on coq.prod_code = bm.code
        WHERE
        ppp.plan_month between #{query.startMonth} and #{query.endMonth}
        <if test="query.projId and query.projId != ''">
            and ppa.project_id in
            <foreach collection="query.projId.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        GROUP BY
        ppa.project_id,
        ppp.plan_month,
        bm.model
        order by ppp.plan_month
    </select>

    <select id="fetchProjChildAmountByMonth" resultType="com.cmoc.modules.srm.vo.AmountPlanToYear">
        SELECT
        bm.model AS title,
        SUBSTR(ppp.pay_time,1,7) AS `month`,
        sum( round(coq.contract_amount_tax_local * ppa.pay_rate / 100,2) ) AS pay_amount,
        ppa.project_id AS proj_id
        FROM
        pur_pay_plan ppp
        INNER JOIN pur_pay_plan_detail pppd ON ppp.id = pppd.pay_plan_id
        INNER JOIN pur_pay_apply ppa ON pppd.pay_apply_id = ppa.id
        INNER JOIN pur_pay_apply_detail ppad on ppa.id = ppad.apply_id
        INNER JOIN contract_object_qty coq on ppad.bill_detail_id = coq.id
        INNER JOIN bas_material bm on coq.prod_code = bm.code
        WHERE
        ppp.pay_status = '2'
        and SUBSTR(ppp.pay_time,1,7) between #{query.startMonth} and #{query.endMonth}
        <if test="query.projId and query.projId != ''">
            and ppa.project_id in
            <foreach collection="query.projId.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        GROUP BY
        ppa.project_id,
        SUBSTR(ppp.pay_time,1,7),
        bm.model
        order by SUBSTR(ppp.pay_time,1,7)
    </select>

    <select id="fetchAmountPlanByCurrency" resultType="com.cmoc.modules.srm.vo.AmountPlan">
        SELECT
            sum(round(coq.contract_amount_tax  * ppa.pay_rate / 100,2)) AS pay_amount,
            sum(round(coq.contract_amount_tax_local * ppa.pay_rate / 100,2)) as pay_amount_local,
            cb.contract_currency
        FROM
            pur_pay_plan ppp
            INNER JOIN pur_pay_plan_detail pppd ON ppp.id = pppd.pay_plan_id
            INNER JOIN pur_pay_apply_detail ppad ON pppd.pay_apply_id = ppad.apply_id
            INNER JOIN pur_pay_apply ppa on ppad.apply_id = ppa.id
            INNER JOIN contract_object_qty coq on ppad.bill_detail_id = coq.id
            left join contract_base cb on coq.contract_id = cb.id
            left join proj_base pb on cb.project_id = pb.id
            left join bas_material bm on coq.prod_code = bm.`code`
        WHERE
            ppad.del_flag = '0'
            <if test="query.month != null and query.month != ''">
                and ppp.plan_month = #{query.month}
            </if>
            <if test="query.projName != null and query.projName != ''">
                and pb.proj_name
                LIKE concat(concat('%',#{query.projName}),'%')
            </if>
            <if test="query.projectId != null and query.projectId != ''">
                and pb.id in
                <foreach collection="query.projectId.split(',')" item="item" open="(" close=")" separator="," >
                    #{item}
                </foreach>
            </if>
            <if test="query.subject != null and query.subject != ''">
                and cb.contract_first_party
                LIKE concat(concat('%',#{query.subject}),'%')
            </if>
            <if test="query.suppName != null and query.suppName != ''">
                and cb.contract_second_party
                LIKE concat(concat('%',#{query.suppName}),'%')
            </if>
            <if test="query.country != null and query.country != ''">
                and bm.country
                LIKE concat(concat('%',#{query.country}),'%')
            </if>
            <if test="query.model != null and query.model != ''">
                and bm.model = #{query.model}
            </if>
        group by cb.contract_currency

    </select>

    <select id="fetchAmountPlanByPayMethod" resultType="com.cmoc.modules.srm.vo.AmountPlan">
        SELECT
            sum(round(coq.contract_amount_tax  * ppa.pay_rate / 100,2)) AS pay_amount,
            sum(round(coq.contract_amount_tax_local * ppa.pay_rate / 100,2)) as pay_amount_local,
            ppa.pay_method
        FROM
            pur_pay_plan ppp
            INNER JOIN pur_pay_plan_detail pppd ON ppp.id = pppd.pay_plan_id
            INNER JOIN pur_pay_apply_detail ppad ON pppd.pay_apply_id = ppad.apply_id
            INNER JOIN pur_pay_apply ppa on ppad.apply_id = ppa.id
            INNER JOIN contract_object_qty coq on ppad.bill_detail_id = coq.id
            left join contract_base cb on coq.contract_id = cb.id
            left join proj_base pb on cb.project_id = pb.id
            left join bas_material bm on coq.prod_code = bm.`code`
        WHERE
            ppad.del_flag = '0'
            <if test="query.month != null and query.month != ''">
                and ppp.plan_month = #{query.month}
            </if>
            <if test="query.projectId != null and query.projectId != ''">
                and pb.id in
                <foreach collection="query.projectId.split(',')" item="item" open="(" close=")" separator="," >
                    #{item}
                </foreach>
            </if>
            <if test="query.projName != null and query.projName != ''">
                and pb.proj_name
                LIKE concat(concat('%',#{query.projName}),'%')
            </if>
            <if test="query.subject != null and query.subject != ''">
                and cb.contract_first_party
                LIKE concat(concat('%',#{query.subject}),'%')
            </if>
            <if test="query.suppName != null and query.suppName != ''">
                and cb.contract_second_party
                LIKE concat(concat('%',#{query.suppName}),'%')
            </if>
            <if test="query.country != null and query.country != ''">
                and bm.country
                LIKE concat(concat('%',#{query.country}),'%')
            </if>
            <if test="query.model != null and query.model != ''">
                and bm.model = #{query.model}
            </if>
        group by ppa.pay_method
    </select>

    <select id="fetchAmountPlanByArea" resultType="com.cmoc.modules.srm.vo.AmountPlan">
        SELECT
            sum( CASE WHEN ppa.pay_type = '00' THEN round( coq.contract_amount_tax_local * ppa.pay_rate / 100, 2 ) else 0 end) AS payAmount1,
            sum( CASE WHEN ppa.pay_type = '20' THEN round( coq.contract_amount_tax_local * ppa.pay_rate / 100, 2 ) else 0 end) AS payAmount2,
            sum( CASE WHEN ppa.pay_type = '10' THEN round( coq.contract_amount_tax_local * ppa.pay_rate / 100, 2 ) else 0 end) AS payAmount3,
            sum( CASE WHEN ppa.pay_type = '30' THEN round( coq.contract_amount_tax_local * ppa.pay_rate / 100, 2 ) else 0 end) AS payAmount4,
            sum( CASE WHEN ppa.pay_type = '50' THEN round( coq.contract_amount_tax_local * ppa.pay_rate / 100, 2 ) else 0 end) AS payAmount5,
            sum( CASE WHEN ppa.pay_type = '09' THEN round( coq.contract_amount_tax_local * ppa.pay_rate / 100, 2 ) else 0 end) AS payAmount6,
            sum( CASE WHEN ppa.pay_type = '40' THEN round( coq.contract_amount_tax_local * ppa.pay_rate / 100, 2 ) else 0 end) AS payAmount7,
            sum(round( coq.contract_amount_tax_local * ppa.pay_rate / 100, 2 )) as totalAmount,
            pb.SUBJECT,
            pb.proj_name
        FROM
            pur_pay_plan ppp
            INNER JOIN pur_pay_plan_detail pppd ON ppp.id = pppd.pay_plan_id
            INNER JOIN pur_pay_apply_detail ppad ON pppd.pay_apply_id = ppad.apply_id
            INNER JOIN pur_pay_apply ppa on ppad.apply_id = ppa.id
            INNER JOIN contract_object_qty coq on ppad.bill_detail_id = coq.id
            left join contract_base cb on coq.contract_id = cb.id
            left join proj_base pb on cb.project_id = pb.id
            left join bas_material bm on coq.prod_code = bm.`code`
        WHERE
            ppad.del_flag = '0'
            <if test="query.month != null and query.month != ''">
                and ppp.plan_month = #{query.month}
            </if>
            <if test="query.projName != null and query.projName != ''">
                and pb.proj_name
                LIKE concat(concat('%',#{query.projName}),'%')
            </if>
            <if test="query.projectId != null and query.projectId != ''">
                and pb.id in
                <foreach collection="query.projectId.split(',')" item="item" open="(" close=")" separator="," >
                    #{item}
                </foreach>
            </if>
            <if test="query.subject != null and query.subject != ''">
                and cb.contract_first_party
                LIKE concat(concat('%',#{query.subject}),'%')
            </if>
            <if test="query.suppName != null and query.suppName != ''">
                and cb.contract_second_party
                LIKE concat(concat('%',#{query.suppName}),'%')
            </if>
            <if test="query.country != null and query.country != ''">
                and bm.country
                LIKE concat(concat('%',#{query.country}),'%')
            </if>
            <if test="query.model != null and query.model != ''">
                and bm.model = #{query.model}
            </if>
        group by pb.subject
    </select>

    <select id="queryList" resultType="com.cmoc.modules.srm.entity.PurPayPlan">
        select
        distinct
        ppp.*,
        pppd.contract_number,
        pppd.contract_name,
        pppd.contract_id
        from
        pur_pay_plan ppp
        inner join (
        select pppd.pay_plan_id,ppa.contract_id,cb.contract_number,cb.contract_name
        from pur_pay_plan_detail pppd
        left join pur_pay_apply ppa on ppa.id = pppd.pay_apply_id
        left join contract_base cb on ppa.contract_id = cb.id
        where pppd.del_flag = '0'
        <if test="query.categoryId != null and query.categoryId != ''">
            AND cb.category_id = #{query.categoryId}
        </if>
        group by pppd.pay_plan_id
        ) pppd on ppp.id = pppd.pay_plan_id
        where
        ppp.del_flag = '0'
        <if test="query.contractName != null and query.contractName != ''">
            AND pppd.contract_name LIKE concat(concat('%',#{query.contractName}),'%')
        </if>
        <if test="query.contractNumber != null and query.contractNumber != ''">
            AND pppd.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.code != null and query.code != ''">
            AND ppp.code LIKE concat(concat('%',#{query.code}),'%')
        </if>
        <if test="query.payStatus !=null and query.payStatus != ''">
            and ppp.pay_status in
            <foreach collection="query.payStatus.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        <if test="query.planMonth !=null and query.planMonth != ''">
            and ppp.plan_month = #{query.planMonth}
        </if>
        <if test="query.auth == 'owner'">
            AND ppp.create_user = #{query.auther}
        </if>
        <if test="query.auth == 'dept'">
            AND (select depart_ids from sys_user su where ppp.create_user = su.username) = #{query.auther}
        </if>
        <if test="query.auth == 'subject'">
            AND cb.contract_first_party_id in
            <foreach collection="query.auther.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>


        <if test="query.column != null and query.column != ''">
            <if test="query.column == 'code'">
                order by ppp.code
            </if>
            <if test="query.column == 'contractName'">
                order by pppd.contract_name
            </if>
            <if test="query.column == 'contractNumber'">
                order by pppd.contract_number
            </if>
            <if test="query.column == 'planMonth'">
                order by ppp.plan_month
            </if>
            <if test="query.column == 'payAmountCope'">
                order by ppp.pay_amount_cope
            </if>
            <if test="query.column == 'payAmountUsd'">
                order by ppp.pay_amount_usd
            </if>
            <if test="query.column == 'payAmountJpy'">
                order by ppp.pay_amount_jpy
            </if>
            <if test="query.column == 'payAmountEur'">
                order by ppp.pay_amount_eur
            </if>

            <if test="query.column == 'payStatus_dictText'">
                order by ppp.pay_status
            </if>
            <if test="query.column == 'createUser_dictText'">
                order by ppp.create_user
            </if>

            <if test="query.column == 'createTime'">
                order by ppp.create_time
            </if>
            <if test="query.order == 'asc'">
                asc
            </if>
            <if test="query.order == 'desc'">
                desc
            </if>
        </if>
    </select>

    <select id="fetchProjTypeAmountByProjId" resultType="map">
        select

                <if test="query.unit == 'wy'">
                   round(sum(tmp.pay_amount_cope) / 10000,2) as payAmount,
                </if>
                <if test="query.unit != 'wy'">
                    sum(tmp.pay_amount_cope) as payAmount,
                </if>
               sdi.item_text as projType
        from (
            SELECT
                sum(ppa.pay_amount) as pay_amount_cope,
                pb.proj_type
            FROM
                pur_pay_plan_detail pppd
                INNER JOIN pur_pay_plan ppp ON pppd.pay_plan_id = ppp.id
                INNER JOIN pur_pay_apply ppa on pppd.pay_apply_id = ppa.id
                INNER JOIN proj_base pb on ppa.project_id = pb.id
            where pppd.del_flag = '0'
                and ppp.pay_status = '2'
                <if test="query.projectId != null and query.projectId != ''">
                    and ppa.project_id = #{query.projectId}
                </if>
                <if test="query.subject != null and query.subject != ''">
                    and pb.subject = #{query.subject}
                </if>
            group by pb.proj_type
            union all
            select
                sum(pcp.pay_amount) as pay_amount_cope,
                pb.proj_type
            from
                project_category_pay pcp
                INNER JOIN proj_base pb on pcp.project_id = pb.id
            where pcp.del_flag = '0'
            and pcp.type = '1'
            <if test="query.projectId != null and query.projectId != ''">
                and pcp.project_id = #{query.projectId}
            </if>
            <if test="query.subject != null and query.subject != ''">
                and pb.subject = #{query.subject}
            </if>
            group by pb.proj_type
        ) tmp
        left join sys_dict_item sdi ON tmp.proj_type = sdi.item_value and sdi.dict_id = (
            select sd.id from sys_dict sd
            where sd.dict_code = 'proj_type'
        )
        group by tmp.proj_type
    </select>

    <select id="fetchPayAmountByMonth" resultType="com.cmoc.modules.srm.entity.PurPayPlan">
        SELECT
            SUBSTR( ppp.pay_time, 1, 7 ) AS `start_month`,
            <if test="query.unit == 'wy'">
                round(sum( ppa.pay_amount ) / 10000,2) AS pay_amount
            </if>
            <if test="query.unit != 'wy'">
                sum( ppa.pay_amount ) AS pay_amount
            </if>
        FROM
            pur_pay_plan ppp
            INNER JOIN pur_pay_plan_detail pppd ON ppp.id = pppd.pay_plan_id
            INNER JOIN pur_pay_apply ppa ON pppd.pay_apply_id = ppa.id
            INNER JOIN proj_base pb on ppa.project_id = pb.id
        WHERE
        ppp.pay_status = '2'
        and SUBSTR(ppp.pay_time,1,7) between #{query.startMonth} and #{query.endMonth}
        <if test="query.subject != null and query.subject != ''">
            and pb.subject = #{query.subject}
        </if>
        GROUP BY
        SUBSTR( ppp.pay_time, 1, 7 )
        order by SUBSTR( ppp.pay_time, 1, 7 )
    </select>
</mapper>