<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cmoc.modules.srm.mapper.StkIoBillMapper">
    <select id="fetchArrivalQty" resultType="com.cmoc.modules.srm.entity.StkIoBillEntry">
        SELECT
            ROUND((ifnull(stk.qty,0) / ifnull(pbr.qty,0)) * 100,2) as qty
        FROM
            (
            SELECT
                sum( qty ) AS qty,
                1 as id
            FROM
                 project_bom_relation
            WHERE del_flag = '0'
              <if test="query.projectId != null and query.projectId != ''">
                  and proj_id = #{query.projectId}
              </if>
            <if test="query.model != null and query.model != ''">
                and model = #{query.model}
            </if>
            ) pbr
            INNER JOIN
            (
            SELECT
                sum( qty) as qty,
                1 as id
            FROM
                 stk_io_bill_entry sibe
                 inner join bas_material bm on sibe.prod_code = bm.code
            WHERE sibe.del_flag = '0'
              and exists (
                select sib.id from stk_io_bill sib where sibe.mid = sib.id and sib.status = '1'
             )
            <if test="query.projectId != null and query.projectId != ''">
                and sibe.project_id = #{query.projectId}
            </if>
            <if test="query.model != null and query.model != ''">
                and bm.model = #{query.model}
            </if>
            ) stk
            ON pbr.id = stk.id
    </select>

    <select id="queryDetailPageList" resultType="com.cmoc.modules.srm.entity.StkIoBillEntry">
        SELECT
            sibe.qty as stock_qty,
            cb.contract_first_party as name,
            bs.area,
            cb.contract_second_party AS supp_name,
            co.prod_spec_type,
            co.sort,
            sibe.create_time,
            sibe.dept_id
        FROM
            stk_io_bill_entry sibe
            INNER JOIN stk_io_bill sib ON sibe.mid = sib.id
            LEFT JOIN bas_warehouse bs ON sib.wh_id = bs.id
            INNER JOIN contract_object_qty co ON sibe.order_detail_id = co.id
            INNER JOIN contract_base cb ON co.contract_id = cb.id
        where sibe.del_flag = '0'
        and sib.status = '1'
        and sibe.prod_code = #{query.prodCode}
        order by co.sort+0
    </select>

    <select id="queryPageList" resultType="com.cmoc.modules.srm.entity.StkIoBill">
        SELECT
            distinct
            sib.*,
            bw.name as wh_name,
            ifnull(ar.role_code,'') as role_code
        FROM
            stk_io_bill sib
            left join bas_warehouse bw on sib.wh_id = bw.id
            left join (
                select GROUP_CONCAT(name) as role_code,business_id from approve_record ar
                where ar.del_flag = '0'
                and ar.type = 'send'
                group by business_id
            ) ar on sib.send_process_id = ar.business_id
        where sib.del_flag = '0'
        <if test="query.whName != null and query.whName != ''">
            AND bw.name LIKE concat(concat('%',#{query.whName}),'%')
        </if>
        <if test="query.suppName != null and query.suppName != ''">
            AND sib.supp_name LIKE concat(concat('%',#{query.suppName}),'%')
        </if>
        <if test="query.billNo != null and query.billNo != ''">
            AND sib.bill_no LIKE concat(concat('%',#{query.billNo}),'%')
        </if>
        <if test="query.contractNumber != null and query.contractNumber != ''">
            AND sib.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.contractName != null and query.contractName != ''">
            AND sib.contract_name LIKE concat(concat('%',#{query.contractName}),'%')
        </if>
        <if test="query.sendStatus != null and query.sendStatus != ''">
            and sib.send_status in
            <foreach collection="query.sendStatus.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        <if test="query.status != null and query.status != ''">
            and sib.status in
            <foreach collection="query.status.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        <if test="query.checkStatus != null and query.checkStatus != ''">
            and sib.check_status in
            <foreach collection="query.checkStatus.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        <if test="query.auth == 'owner'">
            AND sib.create_by = #{query.auther}
        </if>
        <if test="query.auth == 'dept'">
            AND (select depart_ids from sys_user su where sib.create_by = su.username) = #{query.auther}
        </if>
        <if test="query.auth == 'subject'">
            AND exists (
                select pb.id from proj_base pb where sib.project_id = pb.id and pb.subject in
            <foreach collection="query.auther.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
            )
        </if>
        <if test="query.column != null and query.column != ''">
            <if test="query.column == 'billNo'">
                order by sib.bill_no
            </if>
            <if test="query.column == 'stockIoType'">
                order by sib.stock_io_type
            </if>
            <if test="query.column == 'billDate'">
                order by sib.bill_date
            </if>
            <if test="query.column == 'suppName'">
                order by sib.supp_name
            </if>
            <if test="query.column == 'contractName'">
                order by sib.contract_name
            </if>
            <if test="query.column == 'contractNumber'">
                order by sib.contract_number
            </if>
            <if test="query.column == 'projectName'">
                order by sib.project_name
            </if>
            <if test="query.column == 'createBy'">
                order by sib.create_by
            </if>
            <if test="query.column == 'status'">
                order by sib.status
            </if>
            <if test="query.column == 'createTime'">
                order by sib.create_time
            </if>
            <if test="query.column == 'sendTime'">
                order by sib.send_time
            </if>
            <if test="query.column == 'sendStatus'">
                order by sib.send_time
            </if>
            <if test="query.order == 'asc'">
                asc
            </if>
            <if test="query.order == 'desc'">
                desc
            </if>

        </if>
    </select>

    <select id="queryOtherDetailsById" resultType="com.cmoc.modules.srm.entity.ContractObjectQty">
        <![CDATA[
        select
            group_concat(t.prod_name separator ';') prodName,
            group_concat(t.sort separator ';') sort,
            group_concat(t.qty separator ';') deviceQty,
            group_concat(t.contract_qty separator ';') contractQty
        from (
            select
                coq.prod_name,
                group_concat(coq.sort order by coq.sort separator ',') sort ,
                sum(coq.qty) qty,
                co.qty as contract_qty
            from
            contract_object_qty coq
            inner join stk_io_bill_entry sibe on sibe .order_detail_id = coq.id
            inner join contract_object co on coq.record_id = co.id
            where
                sibe.mid = #{query.id,jdbcType=VARCHAR}
                and coq.del_flag = '0'
                and sibe.del_flag = '0'
            group by coq.prod_name
            order by coq.prod_name,coq.sort
        ) t  ]]>
    </select>


    <select id="exportXls" resultType="com.cmoc.modules.srm.entity.StkIoBill">
        SELECT
        distinct
        sib.*,
        bw.name as wh_name
        FROM
        stk_io_bill sib
        left join bas_warehouse bw on sib.wh_id = bw.id
        where sib.del_flag = '0'
        <if test="query.whName != null and query.whName != ''">
            AND bw.name LIKE concat(concat('%',#{query.whName}),'%')
        </if>
        <if test="query.suppName != null and query.suppName != ''">
            AND sib.supp_name LIKE concat(concat('%',#{query.suppName}),'%')
        </if>
        <if test="query.billNo != null and query.billNo != ''">
            AND sib.bill_no LIKE concat(concat('%',#{query.billNo}),'%')
        </if>
        <if test="query.contractNumber != null and query.contractNumber != ''">
            AND sib.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.contractName != null and query.contractName != ''">
            AND sib.contract_name LIKE concat(concat('%',#{query.contractName}),'%')
        </if>
        <if test="query.sendStatus != null and query.sendStatus != ''">
            and sib.send_status in
            <foreach collection="query.sendStatus.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        <if test="query.status != null and query.status != ''">
            and sib.status in
            <foreach collection="query.status.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        <if test="query.checkStatus != null and query.checkStatus != ''">
            and sib.check_status in
            <foreach collection="query.checkStatus.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        <if test="query.auth == 'owner'">
            AND sib.create_by = #{query.auther}
        </if>
        <if test="query.auth == 'dept'">
            AND (select depart_ids from sys_user su where sib.create_by = su.username) = #{query.auther}
        </if>
        <if test="query.auth == 'subject'">
            AND exists (
            select pb.id from proj_base pb where sib.project_id = pb.id and pb.subject in
            <foreach collection="query.auther.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
            )
        </if>
        <if test="query.column != null and query.column != ''">
            <if test="query.column == 'billNo'">
                order by sib.bill_no
            </if>
            <if test="query.column == 'stockIoType'">
                order by sib.stock_io_type
            </if>
            <if test="query.column == 'billDate'">
                order by sib.bill_date
            </if>
            <if test="query.column == 'suppName'">
                order by sib.supp_name
            </if>
            <if test="query.column == 'contractName'">
                order by sib.contract_name
            </if>
            <if test="query.column == 'contractNumber'">
                order by sib.contract_number
            </if>
            <if test="query.column == 'projectName'">
                order by sib.project_name
            </if>
            <if test="query.column == 'createBy'">
                order by sib.create_by
            </if>
            <if test="query.column == 'status'">
                order by sib.status
            </if>
            <if test="query.column == 'createTime'">
                order by sib.create_time
            </if>
            <if test="query.column == 'sendTime'">
                order by sib.send_time
            </if>
            <if test="query.column == 'sendStatus'">
                order by sib.send_time
            </if>
            <if test="query.order == 'asc'">
                asc
            </if>
            <if test="query.order == 'desc'">
                desc
            </if>

        </if>
    </select>

    <select id="queryOtherDetailsByIds" resultType="com.cmoc.modules.srm.entity.ContractObjectQty">
            select
               group_concat(t.prod_name separator ';') prodName,
               group_concat(t.sort separator ';') sort,
               group_concat(t.qty separator ';') deviceQty,
               group_concat(t.contract_qty separator ';') contractQty,
               t.mid
            from (
                select
                    coq.prod_name ,
                    group_concat(coq.sort order by coq.sort separator ',') sort ,
                    sum(coq.qty) qty,
                    sibe.mid,
                    co.qty as contract_qty
                from
                    contract_object_qty coq
                inner join stk_io_bill_entry sibe on sibe .order_detail_id = coq.id
                inner join contract_object co on coq.record_id = co.id
                where
                sibe.mid in
                <foreach collection="ids" item="item" open="(" close=")" separator="," >
                    #{item}
                </foreach>
                group by coq.prod_name,sibe.mid
            ) t
            group by t.mid
    </select>


    <select id="fetchDetailPageList" resultType="com.cmoc.modules.srm.entity.StkIoBillEntry">
        SELECT
            sibe.id,
            sibe.qty,
            sibe.prod_code,
            sibe.prod_name,
            sibe.invoice_rate,
            sibe.invoice_qty,
            coq.prod_spec_type,
            cb.contract_name,
            cb.contract_number,
            cb.contract_tax_rate,
            coq.contract_price,
            coq.contract_price_tax,
            coq.contract_amount,
            coq.contract_amount_tax,
            coq.contract_amount_tax - coq.contract_amount as contract_tax
        FROM
            stk_io_bill_entry sibe
                inner join contract_object_qty coq on sibe.order_detail_id = coq.id
                inner join contract_base cb on coq.contract_id = cb.id
        WHERE sibe.del_flag = '0'
          and cb.contract_second_party_id = #{query.suppId}
          and cb.contract_currency = #{query.currency}
          and sibe.qty > sibe.invoice_qty
    </select>
</mapper>