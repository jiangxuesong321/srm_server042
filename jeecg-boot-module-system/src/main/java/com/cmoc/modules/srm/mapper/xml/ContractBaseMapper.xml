<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cmoc.modules.srm.mapper.ContractBaseMapper">
    <select id="queryPageList" resultType="com.cmoc.modules.srm.entity.ContractBase">
        SELECT
            distinct
            cb.id,
            cb.contract_number,
            cb.contract_name,
            cb.contract_type,
            cb.project_id,
            cb.request_id,
            cb.bs_id,
            cb.contract_currency,
            cb.contract_level,
            cb.contract_status,
            cb.contract_copies_number,
            cb.contract_sign_date,
            cb.contract_sign_address,
            cb.contract_valid_date,
            ifnull(vca.contract_amount,cb.contract_amount) as contract_amount,
            ifnull(vca.contract_amount_tax,cb.contract_amount_tax) as contract_amount_tax,
            ifnull(vca.contract_amount_local,cb.contract_amount_local) as contract_amount_local,
            ifnull(vca.contract_amount_tax_local,cb.contract_amount_tax_local) as contract_amount_tax_local,
            cb.contract_exchange_rate,
            cb.contract_tax_rate,
            cb.contract_first_party,
            cb.contract_second_party_id,
            cb.contract_second_party,
            cb.contract_first_address,
            cb.contract_first_telphone,
            cb.contract_first_fax,
            cb.contract_first_contact,
            cb.contract_first_opening_bank,
            cb.contract_first_bank_account,
            cb.contract_first_legal_person,
            cb.contract_first_agent,
            cb.contract_first_post_code,
            cb.contract_second_address,
            cb.contract_second_telphone,
            cb.contract_second_fax,
            cb.contract_second_contact,
            cb.contract_second_opening_bank,
            cb.contract_second_bank_account,
            cb.contract_second_legal_person,
            cb.contract_second_agent,
            cb.contract_second_post_code,
            cb.comment,
            cb.sort,
            cb.tenant_id,
            cb.del_flag,
            cb.create_user,
            cb.update_user,
            cb.create_time,
            cb.update_time,
            cb.word_attachment,
            cb.other_attachment,
            cb.source,
            cb.category_id,
            cb.contract_first_party_id,
            cb.template_id,
            cb.is_demo,
            cb.main_id,
            cb.oa_attachment,
            cb.contract_category,
            cb.is_sag,
            cb.main_number,
            cb.contract_attachment,
            cb.specification_attachment,
            prm.req_type,
            pb.proj_name,
            pb.proj_code,
            ifnull(ppa.pay_amount,0) + ifnull(ppa1.pay_amount,0) as pay_amount,
            ifnull(ppa.pay_amount_other,0) + ifnull(ppa1.pay_amount_other,0) as pay_amount_other,
            ifnull(ppi.invoice_amount_tax,0) + ifnull(ppi1.invoice_amount_tax,0) as invoice_amount,
            case when ast.id is not null then '1' else '0' end isDisabled,
            co.prod_name,
            co.contract_price_tax,
            co.qty as qty_num,
            co.prod_brand
        FROM
            contract_base cb
            left join bidding_main bm on cb.request_id = bm.id
            left join inquiry_list il on cb.request_id = il.id
            left join purchase_request_main prm on ifnull(bm.request_id,il.request_id) = prm.id
            left join view_contract_amount vca on cb.id = vca.contract_id
            left join proj_base pb on cb.project_id = pb.id
            left join approve_setting ast on pb.subject = ast.company and ast.username = #{query.createUser} and ast.type = 'contract'
            inner join (
                    select
                           GROUP_CONCAT(prod_name) as prod_name,
                           GROUP_CONCAT(contract_price_tax) as contract_price_tax,
                           GROUP_CONCAT(qty) as qty,
                           GROUP_CONCAT(prod_brand) as prod_brand,
                           contract_id
                    from
                         contract_object co
                    where del_flag = '0'
                    group by contract_id
                ) co on cb.id = co.contract_id
            left join (
                SELECT
                    ppa.contract_id,
                    sum( ppa.pay_amount ) AS pay_amount,
                    sum( ppa.pay_amount_other ) AS pay_amount_other
                FROM
                    pur_pay_plan_detail pppd
                    INNER JOIN pur_pay_plan ppp ON pppd.pay_plan_id = ppp.id
                    INNER JOIN pur_pay_apply ppa ON pppd.pay_apply_id = ppa.id
                WHERE
                    pppd.del_flag = '0'
                    AND ppp.pay_status = '2'
                GROUP BY
                    ppa.contract_id
            ) ppa on cb.id = ppa.contract_id

            left join (
                SELECT
                    cb1.main_id as contract_id,
                    sum( ppa.pay_amount ) AS pay_amount,
                    sum( ppa.pay_amount_other ) AS pay_amount_other
                FROM
                    pur_pay_plan_detail pppd
                    INNER JOIN pur_pay_plan ppp ON pppd.pay_plan_id = ppp.id
                    INNER JOIN pur_pay_apply ppa ON pppd.pay_apply_id = ppa.id
                    INNER JOIN contract_base cb1 on ppa.contract_id = cb1.id
                WHERE
                    pppd.del_flag = '0'
                    AND ppp.pay_status = '2'
                GROUP BY
                    cb1.main_id
            ) ppa1 on cb.id = ppa1.contract_id

            left join (
                select
                   ppi.contract_id,
                   sum(ppi.invoice_amount_tax) as invoice_amount_tax
                from
                   purchase_pay_inovice ppi
                group by ppi.contract_id
            ) ppi on cb.id = ppi.contract_id

            left join (
                select
                    cb1.main_id as contract_id,
                    sum(ppi.invoice_amount_tax) as invoice_amount_tax
                from
                    purchase_pay_inovice ppi
                    inner join contract_base cb1 on ppi.contract_id = cb1.id
                group by cb1.main_id
            ) ppi1 on cb.id = ppi1.contract_id
        where cb.del_flag = '0'
        <if test='query.source == "1" or query.source == "0"'>
            and cb.source = #{query.source}
        </if>
        <if test='query.source == "2"'>
            and cb.main_id is null
        </if>
        <if test="query.auth == 'owner'">
            AND cb.create_user = #{query.auther}
        </if>
        <if test="query.auth == 'dept'">
            AND (select depart_ids from sys_user su where cb.create_user = su.username) = #{query.auther}
        </if>
        <if test="query.auth == 'subject'">
            AND pb.subject in
            <foreach collection="query.auther.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        <if test="query.projName != null and query.projName != ''">
            AND pb.proj_name LIKE concat(concat('%',#{query.projName}),'%')
        </if>
        <if test="query.prodName != null and query.prodName != ''">
            AND co.prod_name LIKE concat(concat('%',#{query.prodName}),'%')
        </if>
        <if test="query.contractNumber != null and query.contractNumber != ''">
            AND cb.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.contractSecondPartyId != null and query.contractSecondPartyId != ''">
            AND cb.contract_second_party_id LIKE concat(concat('%',#{query.contractSecondPartyId}),'%')
        </if>
        <if test="query.contractSecondParty != null and query.contractSecondParty != ''">
            AND cb.contract_second_party LIKE concat(concat('%',#{query.contractSecondParty}),'%')
        </if>
        <if test="query.contractName != null and query.contractName != ''">
            AND cb.contract_name LIKE concat(concat('%',#{query.contractName}),'%')
        </if>
        <if test="query.contractType != null and query.contractType != ''">
            AND cb.contract_type = #{query.contractType}
        </if>
        <if test="query.column != null and query.column != ''">
            <if test="query.column == 'contractNumber'">
                order by cb.contract_number
            </if>
            <if test="query.column == 'contractName'">
                order by cb.contract_name
            </if>
            <if test="query.column == 'inquiryCode'">
                order by il.inquiry_code
            </if>
            <if test="query.column == 'projName'">
                order by pb.proj_name
            </if>
            <if test="query.column == 'contractCurrency'">
                order by cb.contract_currency
            </if>
            <if test="query.column == 'contractAmountTax'">
                order by ifnull(vca.contract_amount_tax,cb.contract_amount_tax)
            </if>
            <if test="query.column == 'contractAmountTaxLocal'">
                order by ifnull(vca.contract_amount_tax_local,cb.contract_amount_tax_local)
            </if>
            <if test="query.column == 'contractStatus'">
                order by cb.contract_status
            </if>

            <if test="query.column == 'invoiceAmount'">
                order by ifnull(ppi.invoice_amount_tax,0)
            </if>
            <if test="query.column == 'payAmount'">
                order by  ifnull(ppa.pay_amount,0)
            </if>
            <if test="query.column == 'contractValidDate'">
                order by cb.contract_valid_date
            </if>
            <if test="query.column == 'biddingNo'">
                order by bm.bidding_no
            </if>

            <if test="query.column == 'createTime'">
                order by cb.create_time
            </if>
            <if test="query.order == 'asc'">
                asc
            </if>
            <if test="query.order == 'desc'">
                desc
            </if>

        </if>
    </select>


    <select id="fetchContractByProjId" resultType="com.cmoc.modules.srm.entity.ContractBase">
        select
            <if test="query.unit == 'wy'">
                round(sum(tmp.contract_amount_tax_local) / 10000,2) as contract_amount_tax_local
            </if>
            <if test="query.unit != 'wy'">
                sum(tmp.contract_amount_tax_local) as contract_amount_tax_local
            </if>
        from (
            SELECT
                sum(ifnull(vca.contract_amount_tax_local,cb.contract_amount_tax_local))  as contract_amount_tax_local
            FROM
                contract_base cb
                left join view_contract_amount vca on cb.id = vca.contract_id
            where contract_status = '4'
                and del_flag = '0'
                and cb.main_id is null
                <if test="query.projectId != null and query.projectId != ''">
                    and project_id = #{query.projectId}
                </if>
                <if test="query.subject != null and query.subject != ''">
                    and contract_first_party_id = #{query.subject}
                </if>
                <if test="query.source == 'benyue'">
                    and DATE_FORMAT(contract_valid_date, "%Y-%m") = #{query.startMonth}
                </if>
            union all
            select
                   sum(pcp.pay_amount) as contract_amount_tax_local
            from
                project_category_pay pcp
                inner join proj_base pb on pcp.project_id = pb.id
            where pcp.del_flag = '0'
                and pcp.type = '0'
                <if test="query.projectId != null and query.projectId != ''">
                    and pcp.project_id = #{query.projectId}
                </if>
                <if test="query.subject != null and query.subject != ''">
                    and pb.subject = #{query.subject}
                </if>
                <if test="query.source == 'benyue'">
                    and pcp.id = 'null'
                </if>
        ) tmp

    </select>

    <select id="fetchContractListByProjId" resultType="com.cmoc.modules.srm.entity.ContractBase">
        SELECT
            cb.id,
            cb.contract_number,
            cb.contract_name,
            cb.contract_currency,
            cb.contract_second_party as supp_name,
            IFNULL(co.qty,0) as qty,
            co.prod_name,
            ifnull(vca.contract_amount_tax,cb.contract_amount_tax) as contract_amount_tax,
            cb.contract_valid_date,
            ifnull(pay.pay_amount,0) as pay_amount,
            case when ifnull(vca.contract_amount_tax,cb.contract_amount_tax) - ifnull(pay.pay_amount,0) &lt; 0
                then 0
                else ifnull(vca.contract_amount_tax,cb.contract_amount_tax) - ifnull(pay.pay_amount,0)
                end
                as remain_pay_amount,
            ifnull(ppi.invoice_amount_tax,0) as invoice_amount,
            case when ifnull(vca.contract_amount_tax,cb.contract_amount_tax) -  ifnull(ppi.invoice_amount_tax,0) &lt; 0
                then 0
                else ifnull(vca.contract_amount_tax,cb.contract_amount_tax) -  ifnull(ppi.invoice_amount_tax,0)
                end
                as remain_invoice_amount,
            pc.name as name
        FROM
            contract_base cb
            left join project_category pc on cb.category_id = pc.id
            left join view_contract_amount vca on cb.id = vca.contract_id
            left join (
            SELECT
                co.contract_id,
                sum( co.qty ) AS qty,
                GROUP_CONCAT(co.prod_name) as prod_name
            FROM
                contract_object co
            WHERE
                co.del_flag = '0'
            GROUP BY
                co.contract_id
            ) co on cb.id = co.contract_id
            left join (
            SELECT
                ppa.contract_id,
                sum( ppa.pay_amount_other ) AS pay_amount
            FROM
                pur_pay_apply ppa
                INNER JOIN pur_pay_plan_detail pppd ON ppa.id = pppd.pay_apply_id
                INNER JOIN pur_pay_plan ppp ON pppd.pay_plan_id = ppp.id
            WHERE
                ppp.pay_status = '2'
              AND ppa.del_flag = '0'
            GROUP BY
                ppa.contract_id
            ) pay on cb.id = pay.contract_id
            left join (
            SELECT
                ppi.contract_id,
                sum( invoice_amount_tax ) AS invoice_amount_tax
            FROM
                purchase_pay_inovice ppi
            GROUP BY
                ppi.contract_id
            ) ppi on cb.id = ppi.contract_id
        WHERE
            cb.del_flag = '0'
          AND cb.contract_status = '4'
        <if test="query.projectId != null and query.projectId != ''">
            AND cb.project_id = #{query.projectId}
        </if>
        <if test="query.categoryId != null and query.categoryId != ''">
            AND FIND_IN_SET(cb.category_id,getChildLst(#{query.categoryId})) > 0
        </if>
        <if test="query.contractNumber != null and query.contractNumber != ''">
            AND cb.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.contractName != null and query.contractName != ''">
            AND cb.contract_name LIKE concat(concat('%',#{query.contractName}),'%')
        </if>
        <if test="query.contractCurrency != null and query.contractCurrency != ''">
            AND cb.contract_currency = #{query.contractCurrency}
        </if>
        <if test="query.column != null and query.column != ''">
            <if test="query.column == 'createTime'">
                order by cb.create_time
            </if>
            <if test="query.column == 'contractNumber'">
                order by cb.contract_number
            </if>
            <if test="query.column == 'contractName'">
                order by cb.contract_name
            </if>
            <if test="query.column == 'name'">
                order by pc.name
            </if>
            <if test="query.column == 'contractCurrency_dictText'">
                order by cb.contract_currency
            </if>
            <if test="query.column == 'qty'">
                order by IFNULL(co.qty,0)
            </if>
            <if test="query.column == 'contractAmountTax'">
                order by ifnull(vca.contract_amount_tax,cb.contract_amount_tax)
            </if>
            <if test="query.column == 'contractValidDate'">
                order by cb.contract_valid_date
            </if>
            <if test="query.column == 'payAmount'">
                order by ifnull(pay.pay_amount,0)
            </if>
            <if test="query.column == 'invoiceAmount'">
                order by ifnull(ppi.invoice_amount_tax,0)
            </if>


            <if test="query.order == 'asc'">
                 asc
            </if>
            <if test="query.order == 'desc'">
                desc
            </if>
        </if>
    </select>

    <select id="fetchContractBySupp" resultType="com.cmoc.modules.srm.entity.ContractBase">
        SELECT
            cb.*,
            ifnull(ppa.pay_amount,0) as pay_amount,
            ifnull(ppa.pay_amount_other,0) as pay_amount_other
        FROM
            contract_base cb
            left join (
                SELECT
                    ppa.contract_id,
                    sum( ppa.pay_amount_other ) AS pay_amount_other,
                    sum(ppa.pay_amount) as pay_amount
                FROM
                    pur_pay_plan_detail pppd
                    INNER JOIN pur_pay_plan ppp ON pppd.pay_plan_id = ppp.id
                    INNER JOIN pur_pay_apply ppa ON pppd.pay_apply_id = ppa.id
                WHERE
                    pppd.del_flag = '0'
                  AND ppp.pay_status = '2'
                GROUP BY
                    ppa.contract_id
            ) ppa on cb.id = ppa.contract_id
        WHERE
            cb.contract_status = '4'
          and del_flag = '0'
          and contract_second_party_id = #{query.contractSecondPartyId}
    </select>

    <select id="fetchContractProgressPageList" resultType="com.cmoc.modules.srm.vo.ContractProgress">
        SELECT
            pb.proj_name,
            co.capacity,
            co.prod_name,
            co.prod_brand as brand_name,
            co.prod_spec_type AS spe_type,
            co.qty,
            co.contract_amount_tax,
            co.contract_amount_tax_local,
            cb.contract_currency AS currency,
            cb.contract_exchange_rate AS exchange_rate,
            cb.process_code,
            cb.process_create_time,
            cb.process_node,
            cb.contract_sign_date,
            sp.name AS supp_name,
            bm.country
        FROM
            contract_object co
            INNER JOIN contract_base cb ON co.contract_id = cb.id
            INNER JOIN proj_base pb ON cb.project_id = pb.id
            INNER JOIN bas_supplier sp ON cb.contract_second_party_id = sp.id
            LEFT JOIN  bas_material bm on co.prod_code = bm.code
        WHERE
            co.del_flag = '0'
          and cb.contract_status > 0
        <if test="query.country != null and query.country != ''">
            and bm.country
            LIKE concat(concat('%',#{query.country}),'%')
        </if>
        <if test="query.projName != null and query.projName != ''">
            and pb.proj_name
            LIKE concat(concat('%',#{query.projName}),'%')
        </if>
        <if test="query.prodName != null and query.prodName != ''">
            and co.prod_name
            LIKE concat(concat('%',#{query.prodName}),'%')
        </if>
        <if test="query.suppName != null and query.suppName != ''">
            and sp.name
            LIKE concat(concat('%',#{query.suppName}),'%')
        </if>
        <if test="query.speType != null and query.speType != ''">
            and co.prod_spec_type
            LIKE concat(concat('%',#{query.speType}),'%')
        </if>
        <if test="query.processNode != null and query.processNode != ''">
            and cb.process_node
            LIKE concat(concat('%',#{query.processNode}),'%')
        </if>


        <if test="query.column != null and query.column != ''">
            <if test="query.column == 'contractSignDate'">
                order by cb.contract_sign_date
            </if>
            <if test="query.column == 'projName'">
                order by pb.proj_name
            </if>
            <if test="query.column == 'capacity'">
                order by co.capacity
            </if>
            <if test="query.column == 'prodName'">
                order by co.prod_name
            </if>
            <if test="query.column == 'brandName'">
                order by co.prod_brand
            </if>
            <if test="query.column == 'suppName'">
                order by sp.name
            </if>
            <if test="query.column == 'speType'">
                order by co.prod_spec_type
            </if>
            <if test="query.column == 'country'">
                order by bm.country
            </if>
            <if test="query.column == 'qty'">
                order by co.qty
            </if>

            <if test="query.column == 'currency_dictText'">
                order by cb.contract_currency
            </if>
            <if test="query.column == 'contractAmountTax'">
                order by co.contract_amount_tax
            </if>
            <if test="query.column == 'exchangeRate'">
                order by cb.contract_exchange_rate
            </if>
            <if test="query.column == 'contractAmountTaxLocal'">
                order by co.contract_amount_tax_local
            </if>
            <if test="query.column == 'processCode'">
                order by cb.process_code
            </if>
            <if test="query.column == 'processCreateTime'">
                order by cb.process_create_time
            </if>
            <if test="query.column == 'processNode'">
                order by cb.process_node
            </if>
            <if test="query.column == 'createTime'">
                order by cb.create_time
            </if>
            <if test="query.order == 'asc'">
                asc
            </if>
            <if test="query.order == 'desc'">
                desc
            </if>
        </if>
    </select>

    <select id="fetchContractAmount" resultType="com.cmoc.modules.srm.entity.ContractObject">
        SELECT
            sum(ifnull(vca.contract_amount_tax_local,cb.contract_amount_tax_local))  as contract_amount_tax,
            count(distinct cb.id) as contract_num
        FROM
            contract_base cb
            left join view_contract_amount vca on cb.id = vca.contract_id
        where contract_status = '4'
          and del_flag = '0'
          and cb.main_id is null
        <if test="query.year !=null and query.year != ''">
            and DATE_FORMAT(cb.contract_valid_date, '%Y') = #{query.year}
        </if>
        <if test="query.startMonth !=null and query.startMonth != '' and query.endMonth !=null and query.endMonth != ''">
            and DATE_FORMAT(cb.contract_valid_date, '%Y-%m') between #{query.startMonth} and #{query.endMonth}
        </if>
        <if test="query.projId !=null and query.projId != ''">
            and cb.project_id = #{query.projId}
        </if>
        <if test="query.contractNumber !=null and query.contractNumber != ''">
            and cb.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.suppName !=null and query.suppName != ''">
            and cb.contract_second_party LIKE concat(concat('%',#{query.suppName}),'%')
        </if>
    </select>

    <select id="fetchPayInvoiceAmount" resultType="com.cmoc.modules.srm.entity.PurchasePayInovice">
        select
           sum(invoice_amount_tax_local) as invoice_amount_tax
        from purchase_pay_inovice ppi
        where del_flag = '0'
        <if test="query.projId !=null and query.projId != ''">
            and project_id = #{query.projId}
        </if>
        <if test="query.year !=null and query.year != ''">
            and exists (
                select cb.id from contract_base cb where DATE_FORMAT(cb.contract_valid_date, '%Y') = #{query.year}
                and ppi.contract_id = cb.id
            )
        </if>
        <if test="query.startMonth !=null and query.startMonth != '' and query.endMonth !=null and query.endMonth != ''">
            and exists (
                select cb.id from contract_base cb
                where DATE_FORMAT(cb.contract_valid_date, '%Y-%m') between #{query.startMonth} and #{query.endMonth}
                and ppi.contract_id = cb.id
                <if test="query.contractNumber !=null and query.contractNumber != ''">
                    and cb.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
                </if>
                <if test="query.suppName !=null and query.suppName != ''">
                    and cb.contract_second_party LIKE concat(concat('%',#{query.suppName}),'%')
                </if>
            )
        </if>
    </select>

    <select id="fetchPayNormalInvoiceAmount" resultType="com.cmoc.modules.srm.entity.PurchasePayInovice">
        select
            sum(invoice_amount_tax_local) as invoice_amount_tax
        from purchase_pay_inovice
        where del_flag = '0'
        and invoice_type = '1'
        <if test="query.year !=null and query.year != ''">
            and DATE_FORMAT(invoice_date, '%Y') = #{query.year}
        </if>
    </select>

    <select id="fetchPaySpecialInvoiceAmount" resultType="com.cmoc.modules.srm.entity.PurchasePayInovice">
        select
            sum(invoice_amount_tax_local) as invoice_amount_tax
        from purchase_pay_inovice
        where del_flag = '0'
          and invoice_type = '0'
        <if test="query.year !=null and query.year != ''">
            and DATE_FORMAT(invoice_date, '%Y') = #{query.year}
        </if>
    </select>

    <select id="fetchContractToInvoice" resultType="com.cmoc.modules.srm.vo.ContractToInvoice">
        SELECT
            sum(ifnull( vca.contract_amount_tax, cb.contract_amount_tax )) AS contract_amount_tax,
            cb.contract_name,
            cb.contract_number,
            cb.contract_valid_date,
            su.realname as proj_user,
            cb.contract_second_party as supp_name,
            cb.id,
            cb.contract_currency,
            ppi.invoice_date,
            ppi.invoice_no,
            ppi.invoice_type,
            ppi.id AS invoice_id,
            ifnull(ppid.invoice_rate,0) as invoice_rate,
            ifnull(ppi.tax_rate,0) as tax_rate,
            ifnull(ppi.invoice_amount_tax,0) as invoice_amount_tax,
            ifnull(ppi.invoice_amount,0) as invoice_amount,
            ppi.remark as comment,
            round(ifnull(ppi.invoice_amount_tax,0) - ifnull(ppi.invoice_amount,0),2) as tax
        FROM
            contract_base cb
            LEFT JOIN view_contract_amount vca ON cb.id = vca.contract_id
            LEFT JOIN proj_base pb on cb.project_id = pb.id
            LEFT JOIN sys_user su on pb.apply_user_id = su.username
            LEFT JOIN purchase_pay_inovice ppi on cb.id = ppi.contract_id  AND ppi.del_flag = '0' AND DATE_FORMAT(ppi.invoice_date, '%Y') = #{query.year}
            LEFT JOIN (
                select invoice_id,invoice_rate from purchase_pay_invoice_detail
                group by invoice_id
            ) ppid on ppi.id = ppid.invoice_id
        WHERE
            cb.contract_status = '4'
          AND cb.del_flag = '0'
        <if test="query.year !=null and query.year != ''">
            and DATE_FORMAT(cb.contract_valid_date, '%Y') = #{query.year}
        </if>
        group by cb.id,ppi.id
        <if test="query.column != null and query.column != ''">
            <if test="query.column == 'contractValidDate'">
                order by cb.contract_valid_date
            </if>
            <if test="query.column == 'contractNumber'">
                order by cb.contract_number
            </if>
            <if test="query.column == 'projUser'">
                order by su.realname
            </if>
            <if test="query.column == 'suppName'">
                order by cb.contract_second_party
            </if>
            <if test="query.column == 'contractAmountTax'">
                order by sum(ifnull( vca.contract_amount_tax, cb.contract_amount_tax ))
            </if>
            <if test="query.column == 'invoiceDate'">
                order by ppi.invoice_date
            </if>
            <if test="query.column == 'invoiceNo'">
                order by ppi.invoice_no
            </if>
            <if test="query.column == 'invoiceType_dictText'">
                order by ppi.invoice_type
            </if>
            <if test="query.column == 'taxRate'">
                order by ifnull(ppi.tax_rate,0)
            </if>
            <if test="query.column == 'invoiceAmount'">
                order by ifnull(ppi.invoice_amount,0)
            </if>
            <if test="query.column == 'tax'">
                order by round(ifnull(ppi.invoice_amount_tax,0) - ifnull(ppi.invoice_amount,0),2)
            </if>
            <if test="query.order == 'asc'">
                asc
            </if>
            <if test="query.order == 'desc'">
                desc
            </if>

        </if>
    </select>

    <select id="fetchContractToInvoiceByMonth" resultType="com.cmoc.modules.srm.vo.ContractToInvoice">
        SELECT
            DATE_FORMAT(ppi.invoice_date, '%Y-%m') as `month`,
            sum(ppi.invoice_amount_tax_local) as invoice_amount_tax,
            sum(ppi.invoice_amount_local) as invoice_amount,
            round(sum(ppi.invoice_amount_tax_local - ppi.invoice_amount_local),2) as tax
        FROM
            purchase_pay_inovice ppi
        WHERE
            ppi.del_flag = '0'
        <if test="query.year !=null and query.year != ''">
            and DATE_FORMAT(invoice_date, '%Y') = #{query.year}
        </if>
        group by DATE_FORMAT(ppi.invoice_date, '%Y-%m')
        order by DATE_FORMAT(ppi.invoice_date, '%Y-%m')
    </select>

    <select id="fetchHasPayInvoiceAmount" resultType="com.cmoc.modules.srm.entity.PurchasePayInovice">
        SELECT
            sum( CASE WHEN ppi.is_export = '1' THEN ppi.invoice_amount_tax_local ELSE ifnull( pti.invoice_amount_tax_local,0 ) END) invoice_amount_tax
        FROM
            purchase_pay_inovice ppi
                LEFT JOIN (
                SELECT
                pti.invoice_id,
                sum( pti.invoice_amount_tax_local ) AS invoice_amount_tax_local
                FROM
                purchase_apply_invoice pti,
                pur_pay_apply ppa
                WHERE
                pti.apply_id = ppa.id
                AND ppa.apply_status = '30'
                GROUP BY
                pti.invoice_id
            ) pti ON ppi.id = pti.invoice_id
        WHERE
        del_flag = '0'
        <if test="query.year !=null and query.year != ''">
            and exists (
            select cb.id from contract_base cb where DATE_FORMAT(cb.contract_valid_date, '%Y') = #{query.year}
            and ppi.contract_id = cb.id
            )
        </if>
    </select>

    <select id="fetchContractSignAmount" resultType="com.cmoc.modules.srm.entity.ContractObject">
        SELECT
        sum(cb.contract_amount_tax_local)  as contract_amount_tax
        FROM
        contract_base cb
        where contract_status = '4'
        and del_flag = '0'
        <if test="query.startMonth !=null and query.startMonth != '' and query.endMonth !=null and query.endMonth != ''">
            and DATE_FORMAT(cb.contract_valid_date, '%Y-%m') between #{query.startMonth} and #{query.endMonth}
        </if>
        <if test="query.projId !=null and query.projId != ''">
            and project_id = #{query.projId}
        </if>
        <if test="query.contractNumber !=null and query.contractNumber != ''">
            and cb.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.suppName !=null and query.suppName != ''">
            and cb.contract_second_party LIKE concat(concat('%',#{query.suppName}),'%')
        </if>
    </select>

    <select id="fetchPayAmount" resultType="com.cmoc.modules.srm.entity.PurPayPlan">
        SELECT
        sum(ppa.pay_amount) as pay_amount_cope
        FROM
        pur_pay_plan_detail pppd
        INNER JOIN pur_pay_plan ppp ON pppd.pay_plan_id = ppp.id
        INNER JOIN pur_pay_apply ppa on pppd.pay_apply_id = ppa.id
        where pppd.del_flag = '0'
        and ppp.pay_status = '2'
        <if test="query.startMonth !=null and query.startMonth != '' and query.endMonth !=null and query.endMonth != ''">
            and exists (
            select cb.id from contract_base cb where DATE_FORMAT(cb.contract_valid_date, '%Y-%m') between #{query.startMonth} and #{query.endMonth}
            and ppa.contract_id = cb.id
            <if test="query.contractNumber !=null and query.contractNumber != ''">
                and cb.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
            </if>
            <if test="query.suppName !=null and query.suppName != ''">
                and cb.contract_second_party LIKE concat(concat('%',#{query.suppName}),'%')
            </if>
            )
        </if>
        <if test="query.projId !=null and query.projId != ''">
            and ppa.project_id = #{query.projId}
        </if>
    </select>

    <select id="fetchContractAndPayPageList" resultType="com.cmoc.modules.srm.vo.ContractAndPay">
        SELECT
            co.contract_id,
            co.prod_code,
            co.record_id as record_id,
            pb.proj_name,
            bm.model,
            cb.contract_sign_date,
            cb.contract_number,
            cb.contract_name,
            cb.contract_second_party as supp_name,
            cb.id,
            cb.contract_currency,
            sum(((ifnull(NULL,ifnull( `co1`.`contract_amount_tax`, `co`.`contract_amount_tax` )) + ifnull( `sibe`.`other_amount`, 0 )) - ( CASE WHEN ( `srbe`.`id` IS NOT NULL ) THEN `sibe`.`contract_amount_tax` ELSE 0 END ))) AS `contract_amount_tax`,
            sum(IFNULL(ppid.invoice_amount,0)) as invoice_amount
        FROM
            contract_object_qty co
            LEFT JOIN contract_object_qty co1 on co.id = co1.main_detail_id
            LEFT JOIN stk_io_bill_entry sibe on co.id = sibe.order_detail_id
            LEFT JOIN stk_return_bill_entry srbe on co.id = srbe.bill_detail_id
            INNER JOIN contract_base cb ON co.contract_id = cb.id
            LEFT JOIN bas_material bm on co.prod_code = bm.code
            INNER JOIN proj_base pb on cb.project_id = pb.id
            LEFT JOIN (
                select
                    sum(ppid.contract_amount_tax) as invoice_amount,
                    coq.id
                from
                     purchase_pay_invoice_detail ppid
                     left join purchase_pay_inovice ppi on ppid.invoice_id = ppi.id
                     left join contract_object_qty coq on ppid.bill_detail_id = coq.id
                where ppid.del_flag = '0'
                <if test="query.projId !=null and query.projId != ''">
                    and ppi.project_id = #{query.projId}
                </if>
                group by coq.id
            ) ppid on co.id = ppid.id
        WHERE
            co.del_flag = '0'
          AND cb.contract_status = '4'
          AND co.main_detail_id is null
        <if test="query.startMonth !=null and query.startMonth != '' and query.endMonth !=null and query.endMonth != ''">
            and DATE_FORMAT(cb.contract_valid_date, '%Y-%m') between #{query.startMonth} and #{query.endMonth}
        </if>
        <if test="query.projId !=null and query.projId != ''">
            and cb.project_id = #{query.projId}
        </if>
        <if test="query.contractNumber !=null and query.contractNumber != ''">
            and cb.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.suppName !=null and query.suppName != ''">
            and cb.contract_second_party LIKE concat(concat('%',#{query.suppName}),'%')
        </if>
        group by co.record_id
        <if test="query.column != null and query.column != ''">
            <if test="query.column == 'projName'">
                order by pb.proj_name
            </if>
            <if test="query.column == 'model_dictText'">
                order by bm.model
            </if>
            <if test="query.column == 'contractSignDate'">
                order by cb.contract_sign_date
            </if>
            <if test="query.column == 'contractNumber'">
                order by cb.contract_number
            </if>
            <if test="query.column == 'contractName'">
                order by cb.contract_name
            </if>
            <if test="query.column == 'suppName'">
                order by cb.contract_second_party
            </if>
            <if test="query.column == 'contractAmountTax'">
                order by sum(co.contract_amount_tax_local)
            </if>
            <if test="query.column == 'invoiceAmount'">
                order by sum(IFNULL(ppid.invoice_amount,0))
            </if>
            <if test="query.column == 'createTime'">
                order by co.create_time
            </if>
            <if test="query.order == 'asc'">
                asc
            </if>
            <if test="query.order == 'desc'">
                desc
            </if>

        </if>
    </select>

    <select id="fetchPayAmountList" resultType="com.cmoc.modules.srm.vo.ContractAndPay">
        SELECT
            sum(round(coq.contract_amount_tax * ppa.pay_rate / 100,2)) AS pay_amount,
            ppad.id,
            coq.contract_id,
            coq.prod_code,
            coq.record_id,
            ppp.`code`,
            ppp.process_create_time
        FROM
            pur_pay_plan_detail pppd
            INNER JOIN pur_pay_plan ppp ON pppd.pay_plan_id = ppp.id AND ppp.del_flag = '0'
            INNER JOIN pur_pay_apply_detail ppad ON pppd.pay_apply_id = ppad.apply_id AND ppad.del_flag = '0'
            INNER JOIN pur_pay_apply ppa on ppad.apply_id = ppa.id AND ppa.del_flag = '0'
            INNER JOIN contract_object_qty coq ON ppad.bill_detail_id = coq.id AND coq.del_flag = '0'
            INNER JOIN contract_base cb on coq.contract_id = cb.id
            LEFT JOIN bas_material bm ON coq.prod_code = bm.CODE
        WHERE
            pppd.del_flag = '0'
          AND ppp.pay_status in
        <foreach collection="query.status.split(',')" item="item" open="(" close=")" separator="," >
            #{item}
        </foreach>
        <if test="query.contractNumber !=null and query.contractNumber != ''">
            and cb.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.suppName !=null and query.suppName != ''">
            and cb.contract_second_party LIKE concat(concat('%',#{query.suppName}),'%')
        </if>
        GROUP BY
            coq.record_id,
            ppp.`code`
        order by ppp.plan_month
    </select>


    <select id="exportContractProgressPageList" resultType="com.cmoc.modules.srm.vo.ContractProgress">
        SELECT
        pb.proj_name,
        co.capacity,
        co.prod_name,
        co.prod_brand as brand_name,
        co.prod_spec_type AS spe_type,
        co.qty,
        truncate(co.contract_amount_tax,0) as contract_amount_tax,
        truncate(co.contract_amount_tax_local,0) as contract_amount_tax_local,
        cb.contract_currency AS currency,
        cb.contract_exchange_rate AS exchange_rate,
        cb.process_code,
        cb.process_create_time,
        cb.contract_sign_date,
        cb.process_node,
        sp.name AS supp_name,
        bm.country
        FROM
        contract_object co
        INNER JOIN contract_base cb ON co.contract_id = cb.id
        INNER JOIN proj_base pb ON cb.project_id = pb.id
        INNER JOIN bas_supplier sp ON cb.contract_second_party_id = sp.id
        LEFT JOIN  bas_material bm on co.prod_code = bm.code
        WHERE
        co.del_flag = '0'
        and cb.contract_status > 0
        <if test="query.country != null and query.country != ''">
            and bm.country
            LIKE concat(concat('%',#{query.country}),'%')
        </if>
        <if test="query.projName != null and query.projName != ''">
            and pb.proj_name
            LIKE concat(concat('%',#{query.projName}),'%')
        </if>
        <if test="query.prodName != null and query.prodName != ''">
            and co.prod_name
            LIKE concat(concat('%',#{query.prodName}),'%')
        </if>
        <if test="query.suppName != null and query.suppName != ''">
            and sp.name
            LIKE concat(concat('%',#{query.suppName}),'%')
        </if>
        <if test="query.speType != null and query.speType != ''">
            and co.prod_spec_type
            LIKE concat(concat('%',#{query.speType}),'%')
        </if>
        <if test="query.processNode != null and query.processNode != ''">
            and cb.process_node
            LIKE concat(concat('%',#{query.processNode}),'%')
        </if>

        <if test="query.column != null and query.column != ''">
            <if test="query.column == 'contractSignDate'">
                order by cb.contract_sign_date
            </if>
            <if test="query.column == 'projName'">
                order by pb.proj_name
            </if>
            <if test="query.column == 'capacity'">
                order by co.capacity
            </if>
            <if test="query.column == 'prodName'">
                order by co.prod_name
            </if>
            <if test="query.column == 'brandName'">
                order by co.prod_brand
            </if>
            <if test="query.column == 'suppName'">
                order by sp.name
            </if>
            <if test="query.column == 'speType'">
                order by co.prod_spec_type
            </if>
            <if test="query.column == 'country'">
                order by bm.country
            </if>
            <if test="query.column == 'qty'">
                order by co.qty
            </if>

            <if test="query.column == 'currency_dictText'">
                order by cb.contract_currency
            </if>
            <if test="query.column == 'contractAmountTax'">
                order by co.contract_amount_tax
            </if>
            <if test="query.column == 'exchangeRate'">
                order by cb.contract_exchange_rate
            </if>
            <if test="query.column == 'contractAmountTaxLocal'">
                order by co.contract_amount_tax_local
            </if>
            <if test="query.column == 'processCode'">
                order by cb.process_code
            </if>
            <if test="query.column == 'processCreateTime'">
                order by cb.process_create_time
            </if>
            <if test="query.column == 'processNode'">
                order by cb.process_node
            </if>
            <if test="query.column == 'createTime'">
                order by cb.create_time
            </if>
            <if test="query.order == 'asc'">
                asc
            </if>
            <if test="query.order == 'desc'">
                desc
            </if>
        </if>
    </select>

    <select id="exportContractToInvoice" resultType="com.cmoc.modules.srm.vo.ContractToInvoice">
        SELECT
        sum(
        ifnull( vca.contract_amount_tax, cb.contract_amount_tax )) AS contract_amount_tax,
        cb.contract_name,
        cb.contract_number,
        cb.contract_valid_date,
        su.realname as proj_user,
        cb.contract_second_party as supp_name,
        cb.id,
        cb.contract_currency,
        ppi.invoice_date,
        ppi.invoice_no,
        ppi.invoice_type,
        ifnull(ppid.invoice_rate,0) as invoice_rate,
        ifnull(ppi.tax_rate,0) as tax_rate,
        ifnull(ppi.invoice_amount_tax,0) as invoice_amount_tax,
        ifnull(ppi.invoice_amount,0) as invoice_amount,
        ppi.remark as comment,
        round(ifnull(ppi.invoice_amount_tax,0) - ifnull(ppi.invoice_amount,0),2) as tax
        FROM
        contract_base cb
        LEFT JOIN view_contract_amount vca ON cb.id = vca.contract_id
        LEFT JOIN proj_base pb on cb.project_id = pb.id
        LEFT JOIN sys_user su on pb.apply_user_id = su.username
        LEFT JOIN purchase_pay_inovice ppi on cb.id = ppi.contract_id  AND ppi.del_flag = '0' AND DATE_FORMAT(ppi.invoice_date, '%Y') = #{query.year}
        LEFT JOIN (
            select invoice_id,invoice_rate from purchase_pay_invoice_detail
            group by invoice_id
        ) ppid on ppi.id = ppid.invoice_id
        WHERE
        cb.contract_status = '4'
        AND cb.del_flag = '0'
        <if test="query.year !=null and query.year != ''">
            and DATE_FORMAT(cb.contract_valid_date, '%Y') = #{query.year}
        </if>
        group by cb.id,ppi.id
        <if test="query.column != null and query.column != ''">
            <if test="query.column == 'contractValidDate'">
                order by cb.contract_valid_date
            </if>
            <if test="query.column == 'contractNumber'">
                order by cb.contract_number
            </if>
            <if test="query.column == 'projUser'">
                order by su.realname
            </if>
            <if test="query.column == 'suppName'">
                order by cb.contract_second_party
            </if>
            <if test="query.column == 'contractAmountTax'">
                order by sum(ifnull( vca.contract_amount_tax, cb.contract_amount_tax ))
            </if>
            <if test="query.column == 'invoiceDate'">
                order by ppi.invoice_date
            </if>
            <if test="query.column == 'invoiceNo'">
                order by ppi.invoice_no
            </if>
            <if test="query.column == 'invoiceType_dictText'">
                order by ppi.invoice_type
            </if>
            <if test="query.column == 'taxRate'">
                order by ifnull(ppi.tax_rate,0)
            </if>
            <if test="query.column == 'invoiceAmount'">
                order by ifnull(ppi.invoice_amount,0)
            </if>
            <if test="query.column == 'tax'">
                order by round(ifnull(ppi.invoice_amount_tax,0) - ifnull(ppi.invoice_amount,0),2)
            </if>
            <if test="query.order == 'asc'">
                asc
            </if>
            <if test="query.order == 'desc'">
                desc
            </if>

        </if>
    </select>

    <select id="exportContractAndPayPageList" resultType="com.cmoc.modules.srm.vo.ContractAndPay">
        SELECT
        co.contract_id,
        co.prod_code,
        co.record_id as record_id,
        pb.proj_name,
        bm.model,
        cb.contract_sign_date,
        cb.contract_number,
        cb.contract_name,
        cb.contract_second_party as supp_name,
        cb.id,
        cb.contract_currency,
        sum(((ifnull(NULL,ifnull( `co1`.`contract_amount_tax`, `co`.`contract_amount_tax` )) + ifnull( `sibe`.`other_amount`, 0 )) - ( CASE WHEN ( `srbe`.`id` IS NOT NULL ) THEN `sibe`.`contract_amount_tax` ELSE 0 END ))) AS `contract_amount_tax`,
        sum(IFNULL(ppid.invoice_amount,0)) as invoice_amount
        FROM
        contract_object_qty co
        LEFT JOIN contract_object_qty co1 on co.id = co1.main_detail_id
        LEFT JOIN stk_io_bill_entry sibe on co.id = sibe.order_detail_id
        LEFT JOIN stk_return_bill_entry srbe on co.id = srbe.bill_detail_id
        INNER JOIN contract_base cb ON co.contract_id = cb.id
        LEFT JOIN bas_material bm on co.prod_code = bm.code
        INNER JOIN proj_base pb on cb.project_id = pb.id
        LEFT JOIN (
        select
        sum(ppid.contract_amount_tax) as invoice_amount,
        coq.id
        from
        purchase_pay_invoice_detail ppid
        left join purchase_pay_inovice ppi on ppid.invoice_id = ppi.id
        left join contract_object_qty coq on ppid.bill_detail_id = coq.id
        where ppid.del_flag = '0'
        <if test="query.projId !=null and query.projId != ''">
            and ppi.project_id = #{query.projId}
        </if>
        group by coq.id
        ) ppid on co.id = ppid.id
        WHERE
        co.del_flag = '0'
        AND cb.contract_status = '4'
        AND co.main_detail_id is null
        <if test="query.startMonth !=null and query.startMonth != '' and query.endMonth !=null and query.endMonth != ''">
            and DATE_FORMAT(cb.contract_valid_date, '%Y-%m') between #{query.startMonth} and #{query.endMonth}
        </if>
        <if test="query.projId !=null and query.projId != ''">
            and cb.project_id = #{query.projId}
        </if>
        <if test="query.contractNumber !=null and query.contractNumber != ''">
            and cb.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.suppName !=null and query.suppName != ''">
            and cb.contract_second_party LIKE concat(concat('%',#{query.suppName}),'%')
        </if>
        group by co.record_id
        <if test="query.column != null and query.column != ''">
            <if test="query.column == 'projName'">
                order by pb.proj_name
            </if>
            <if test="query.column == 'model_dictText'">
                order by bm.model
            </if>
            <if test="query.column == 'contractSignDate'">
                order by cb.contract_sign_date
            </if>
            <if test="query.column == 'contractNumber'">
                order by cb.contract_number
            </if>
            <if test="query.column == 'contractName'">
                order by cb.contract_name
            </if>
            <if test="query.column == 'suppName'">
                order by cb.contract_second_party
            </if>
            <if test="query.column == 'contractAmountTax'">
                order by sum(co.contract_amount_tax_local)
            </if>
            <if test="query.column == 'invoiceAmount'">
                order by sum(IFNULL(ppid.invoice_amount,0))
            </if>
            <if test="query.column == 'createTime'">
                order by co.create_time
            </if>
            <if test="query.order == 'asc'">
                asc
            </if>
            <if test="query.order == 'desc'">
                desc
            </if>

        </if>
    </select>

    <select id="queryExportList" resultType="com.cmoc.modules.srm.entity.ContractBase">
        SELECT
        distinct
        cb.id,
        cb.contract_number,
        cb.contract_name,
        cb.contract_type,
        cb.project_id,
        cb.request_id,
        cb.bs_id,
        cb.contract_currency,
        cb.contract_level,
        cb.contract_status,
        cb.contract_copies_number,
        cb.contract_sign_date,
        cb.contract_sign_address,
        cb.contract_valid_date,
        ifnull(vca.contract_amount,cb.contract_amount) as contract_amount,
        ifnull(vca.contract_amount_tax,cb.contract_amount_tax) as contract_amount_tax,
        ifnull(vca.contract_amount_local,cb.contract_amount_local) as contract_amount_local,
        ifnull(vca.contract_amount_tax_local,cb.contract_amount_tax_local) as contract_amount_tax_local,
        cb.contract_exchange_rate,
        cb.contract_tax_rate,
        cb.contract_first_party,
        cb.contract_second_party_id,
        cb.contract_second_party,
        cb.contract_first_address,
        cb.contract_first_telphone,
        cb.contract_first_fax,
        cb.contract_first_contact,
        cb.contract_first_opening_bank,
        cb.contract_first_bank_account,
        cb.contract_first_legal_person,
        cb.contract_first_agent,
        cb.contract_first_post_code,
        cb.contract_second_address,
        cb.contract_second_telphone,
        cb.contract_second_fax,
        cb.contract_second_contact,
        cb.contract_second_opening_bank,
        cb.contract_second_bank_account,
        cb.contract_second_legal_person,
        cb.contract_second_agent,
        cb.contract_second_post_code,
        cb.comment,
        cb.sort,
        cb.tenant_id,
        cb.del_flag,
        cb.create_user,
        cb.update_user,
        cb.create_time,
        cb.update_time,
        cb.word_attachment,
        cb.other_attachment,
        cb.source,
        cb.category_id,
        cb.contract_first_party_id,
        cb.template_id,
        cb.is_demo,
        cb.main_id,
        cb.oa_attachment,
        cb.contract_category,
        cb.is_sag,
        cb.main_number,
        cb.contract_attachment,
        cb.specification_attachment,
        prm.req_type,
        pb.proj_name,
        pb.proj_code,
        ifnull(ppa.pay_amount,0) + ifnull(ppa1.pay_amount,0) as pay_amount,
        ifnull(ppa.pay_amount_other,0) + ifnull(ppa1.pay_amount_other,0) as pay_amount_other,
        ifnull(ppi.invoice_amount_tax,0) + ifnull(ppi1.invoice_amount_tax,0) as invoice_amount,
        case when ast.id is not null then '1' else '0' end isDisabled,
        co.prod_name,
        co.contract_price_tax,
        co.qty as qty_num,
        co.prod_brand
        FROM
        contract_base cb
        left join bidding_main bm on cb.request_id = bm.id
        left join inquiry_list il on cb.request_id = il.id
        left join purchase_request_main prm on ifnull(bm.request_id,il.request_id) = prm.id
        left join view_contract_amount vca on cb.id = vca.contract_id
        left join proj_base pb on cb.project_id = pb.id
        left join approve_setting ast on pb.subject = ast.company and ast.username = #{query.createUser} and ast.type = 'contract'
        inner join (
        select
        GROUP_CONCAT(prod_name) as prod_name,
        GROUP_CONCAT(contract_price_tax) as contract_price_tax,
        GROUP_CONCAT(qty) as qty,
        GROUP_CONCAT(prod_brand) as prod_brand,
        contract_id
        from
        contract_object co
        where del_flag = '0'
        group by contract_id
        ) co on cb.id = co.contract_id
        left join (
        SELECT
        ppa.contract_id,
        sum( ppa.pay_amount ) AS pay_amount,
        sum( ppa.pay_amount_other ) AS pay_amount_other
        FROM
        pur_pay_plan_detail pppd
        INNER JOIN pur_pay_plan ppp ON pppd.pay_plan_id = ppp.id
        INNER JOIN pur_pay_apply ppa ON pppd.pay_apply_id = ppa.id
        WHERE
        pppd.del_flag = '0'
        AND ppp.pay_status = '2'
        GROUP BY
        ppa.contract_id
        ) ppa on cb.id = ppa.contract_id

        left join (
        SELECT
        cb1.main_id as contract_id,
        sum( ppa.pay_amount ) AS pay_amount,
        sum( ppa.pay_amount_other ) AS pay_amount_other
        FROM
        pur_pay_plan_detail pppd
        INNER JOIN pur_pay_plan ppp ON pppd.pay_plan_id = ppp.id
        INNER JOIN pur_pay_apply ppa ON pppd.pay_apply_id = ppa.id
        INNER JOIN contract_base cb1 on ppa.contract_id = cb1.id
        WHERE
        pppd.del_flag = '0'
        AND ppp.pay_status = '2'
        GROUP BY
        cb1.main_id
        ) ppa1 on cb.id = ppa1.contract_id

        left join (
        select
        ppi.contract_id,
        sum(ppi.invoice_amount_tax) as invoice_amount_tax
        from
        purchase_pay_inovice ppi
        group by ppi.contract_id
        ) ppi on cb.id = ppi.contract_id

        left join (
        select
        cb1.main_id as contract_id,
        sum(ppi.invoice_amount_tax) as invoice_amount_tax
        from
        purchase_pay_inovice ppi
        inner join contract_base cb1 on ppi.contract_id = cb1.id
        group by cb1.main_id
        ) ppi1 on cb.id = ppi1.contract_id
        where cb.del_flag = '0'
        <if test='query.source == "1" or query.source == "0"'>
            and cb.source = #{query.source}
        </if>
        <if test='query.source == "2"'>
            and cb.main_id is null
        </if>
        <if test="query.auth == 'owner'">
            AND cb.create_user = #{query.auther}
        </if>
        <if test="query.auth == 'dept'">
            AND (select depart_ids from sys_user su where cb.create_user = su.username) = #{query.auther}
        </if>
        <if test="query.auth == 'subject'">
            AND pb.subject in
            <foreach collection="query.auther.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        <if test="query.projName != null and query.projName != ''">
            AND pb.proj_name LIKE concat(concat('%',#{query.projName}),'%')
        </if>
        <if test="query.prodName != null and query.prodName != ''">
            AND co.prod_name LIKE concat(concat('%',#{query.prodName}),'%')
        </if>
        <if test="query.contractNumber != null and query.contractNumber != ''">
            AND cb.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.contractSecondPartyId != null and query.contractSecondPartyId != ''">
            AND cb.contract_second_party_id LIKE concat(concat('%',#{query.contractSecondPartyId}),'%')
        </if>
        <if test="query.contractSecondParty != null and query.contractSecondParty != ''">
            AND cb.contract_second_party LIKE concat(concat('%',#{query.contractSecondParty}),'%')
        </if>
        <if test="query.contractName != null and query.contractName != ''">
            AND cb.contract_name LIKE concat(concat('%',#{query.contractName}),'%')
        </if>
        <if test="query.contractType != null and query.contractType != ''">
            AND cb.contract_type = #{query.contractType}
        </if>
        <if test="query.column != null and query.column != ''">
            <if test="query.column == 'contractNumber'">
                order by cb.contract_number
            </if>
            <if test="query.column == 'contractName'">
                order by cb.contract_name
            </if>
            <if test="query.column == 'inquiryCode'">
                order by il.inquiry_code
            </if>
            <if test="query.column == 'projName'">
                order by pb.proj_name
            </if>
            <if test="query.column == 'contractCurrency'">
                order by cb.contract_currency
            </if>
            <if test="query.column == 'contractAmountTax'">
                order by ifnull(vca.contract_amount_tax,cb.contract_amount_tax)
            </if>
            <if test="query.column == 'contractAmountTaxLocal'">
                order by ifnull(vca.contract_amount_tax_local,cb.contract_amount_tax_local)
            </if>
            <if test="query.column == 'contractStatus'">
                order by cb.contract_status
            </if>

            <if test="query.column == 'invoiceAmount'">
                order by ifnull(ppi.invoice_amount_tax,0)
            </if>
            <if test="query.column == 'payAmount'">
                order by  ifnull(ppa.pay_amount,0)
            </if>
            <if test="query.column == 'contractValidDate'">
                order by cb.contract_valid_date
            </if>
            <if test="query.column == 'biddingNo'">
                order by bm.bidding_no
            </if>

            <if test="query.column == 'createTime'">
                order by cb.create_time
            </if>
            <if test="query.order == 'asc'">
                asc
            </if>
            <if test="query.order == 'desc'">
                desc
            </if>

        </if>
    </select>

    <select id="fetchContractByProjType" resultType="map">
        select
            <if test="query.unit == 'wy'">
                round(sum(tmp.contract_amount_tax_local) / 10000,2) as payAmount,
            </if>
            <if test="query.unit != 'wy'">
                sum(tmp.contract_amount_tax_local) as payAmount,
            </if>
            sdi.item_text as projType
        from (
        SELECT
            sum(ifnull(vca.contract_amount_tax_local,cb.contract_amount_tax_local))  as contract_amount_tax_local,
            pb.proj_type
        FROM
            contract_base cb
            left join view_contract_amount vca on cb.id = vca.contract_id
            inner join proj_base pb on cb.project_id = pb.id
        where cb.contract_status = '4'
            and cb.del_flag = '0'
            and cb.main_id is null
            <if test="query.projectId != null and query.projectId != ''">
                and cb.project_id = #{query.projectId}
            </if>
            <if test="query.subject != null and query.subject != ''">
                and pb.subject = #{query.subject}
            </if>
        group by pb.proj_type
        union all
        select
            sum(pcp.pay_amount) as contract_amount_tax_local,
            pb.proj_type
        from project_category_pay pcp
        inner join proj_base pb on pcp.project_id = pb.id
        where pcp.del_flag = '0'
        and pcp.type = '0'
        <if test="query.projectId != null and query.projectId != ''">
            and pcp.project_id = #{query.projectId}
        </if>
        <if test="query.subject != null and query.subject != ''">
            and pb.subject = #{query.subject}
        </if>
        group by pb.proj_type
        ) tmp
        left join sys_dict_item sdi ON tmp.proj_type = sdi.item_value and sdi.dict_id = (
            select sd.id from sys_dict sd
            where sd.dict_code = 'proj_type'
        )
        group by tmp.proj_type
    </select>


    <select id="fetchContractAmountByType" resultType="map">
        select * from (
            SELECT
            <if test="query.unit == 'wy'">
                round(sum(ifnull(vca.contract_amount_tax_local,cb.contract_amount_tax_local)) / 10000,2)  as contractAmountTaxLocal,
            </if>
            <if test="query.unit != 'wy'">
                sum(ifnull(vca.contract_amount_tax_local,cb.contract_amount_tax_local))  as contractAmountTaxLocal,
            </if>
            sdi.item_text as name
            FROM
            contract_base cb
            left join view_contract_amount vca on cb.id = vca.contract_id
            left join sys_dict_item sdi ON cb.contract_category = sdi.item_value and sdi.dict_id = (
            select sd.id from sys_dict sd
            where sd.dict_code = 'contract_type'
            )
            where
            cb.contract_status = '4'
            and cb.del_flag = '0'
            and cb.main_id is null
            <if test="query.subject != null and query.subject != ''">
                and cb.contract_first_party_id = #{query.subject}
            </if>
            group by cb.contract_category
        ) tmp
        order by tmp.contractAmountTaxLocal desc
    </select>

    <select id="fetchContractNum" resultType="map">
        select count(1) as num from  contract_base cb
        where  cb.contract_status = '4'
        and cb.del_flag = '0'
        <if test="query.subject != null and query.subject != ''">
            and cb.contract_first_party_id = #{query.subject}
        </if>
        <if test="query.source == 'benyue'">
            and DATE_FORMAT(contract_valid_date, "%Y-%m") = #{query.startMonth}
        </if>
        <if test="query.source == 'twelve'">
            and DATE_FORMAT(contract_valid_date, "%Y-%m") between #{query.startMonth} and #{query.endMonth}
        </if>
    </select>

    <select id="fetchContractNumByMonth" resultType="com.cmoc.modules.srm.entity.ContractBase">
        select count(1) as qty,DATE_FORMAT(contract_valid_date, "%Y-%m") as start_month from  contract_base cb
        where  cb.contract_status = '4'
        and cb.del_flag = '0'
        <if test="query.subject != null and query.subject != ''">
            and cb.contract_first_party_id = #{query.subject}
        </if>
        group by DATE_FORMAT(contract_valid_date, "%Y-%m")
    </select>

    <select id="fetchQtyNum" resultType="map">
        SELECT
            sum(co.qty) as qtyNum
        FROM
        contract_base cb
        inner join proj_base pb on cb.project_id = pb.id
        inner join contract_object co on cb.id = co.contract_id
        where cb.del_flag = '0'
        <if test='query.source == "1" or query.source == "0"'>
            and cb.source = #{query.source}
        </if>
        and cb.main_id is null
        <if test="query.auth == 'owner'">
            AND cb.create_user = #{query.auther}
        </if>
        <if test="query.auth == 'dept'">
            AND (select depart_ids from sys_user su where cb.create_user = su.username) = #{query.auther}
        </if>
        <if test="query.auth == 'subject'">
            AND pb.subject in
            <foreach collection="query.auther.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        <if test="query.projName != null and query.projName != ''">
            AND pb.proj_name LIKE concat(concat('%',#{query.projName}),'%')
        </if>
        <if test="query.prodName != null and query.prodName != ''">
            AND co.prod_name LIKE concat(concat('%',#{query.prodName}),'%')
        </if>
        <if test="query.contractNumber != null and query.contractNumber != ''">
            AND cb.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.contractSecondPartyId != null and query.contractSecondPartyId != ''">
            AND cb.contract_second_party_id LIKE concat(concat('%',#{query.contractSecondPartyId}),'%')
        </if>
        <if test="query.contractSecondParty != null and query.contractSecondParty != ''">
            AND cb.contract_second_party LIKE concat(concat('%',#{query.contractSecondParty}),'%')
        </if>
        <if test="query.contractName != null and query.contractName != ''">
            AND cb.contract_name LIKE concat(concat('%',#{query.contractName}),'%')
        </if>
        <if test="query.contractType != null and query.contractType != ''">
            AND cb.contract_type = #{query.contractType}
        </if>


    </select>

    <select id="fetchContractAmountTaxLocal" resultType="map">
        SELECT
            sum(ifnull(vca.contract_amount_tax_local,cb.contract_amount_tax_local)) as contractAmountTaxLocal
        FROM
        contract_base cb
        left join view_contract_amount vca on cb.id = vca.contract_id
        left join proj_base pb on cb.project_id = pb.id
        where cb.del_flag = '0'
        <if test='query.source == "1" or query.source == "0"'>
            and cb.source = #{query.source}
        </if>
        <if test="query.auth == 'owner'">
            AND cb.create_user = #{query.auther}
        </if>
        <if test="query.auth == 'dept'">
            AND (select depart_ids from sys_user su where cb.create_user = su.username) = #{query.auther}
        </if>
        <if test="query.auth == 'subject'">
            AND pb.subject in
            <foreach collection="query.auther.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        <if test="query.projName != null and query.projName != ''">
            AND pb.proj_name LIKE concat(concat('%',#{query.projName}),'%')
        </if>
        <if test="query.prodName != null and query.prodName != ''">
            AND exists (
                select co.contract_id from contract_object co
                where co.prod_name LIKE concat(concat('%',#{query.prodName}),'%')
                and cb.id = co.contract_id
            )
        </if>
        <if test="query.contractNumber != null and query.contractNumber != ''">
            AND cb.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.contractSecondPartyId != null and query.contractSecondPartyId != ''">
            AND cb.contract_second_party_id LIKE concat(concat('%',#{query.contractSecondPartyId}),'%')
        </if>
        <if test="query.contractSecondParty != null and query.contractSecondParty != ''">
            AND cb.contract_second_party LIKE concat(concat('%',#{query.contractSecondParty}),'%')
        </if>
        <if test="query.contractName != null and query.contractName != ''">
            AND cb.contract_name LIKE concat(concat('%',#{query.contractName}),'%')
        </if>
        <if test="query.contractType != null and query.contractType != ''">
            AND cb.contract_type = #{query.contractType}
        </if>

    </select>

    <select id="fetchPayAmountTaxLocal" resultType="map">
        SELECT
            sum(ifnull(ppa.pay_amount,0) + ifnull(ppa1.pay_amount,0)) as payAmountTaxLocal
        FROM
        contract_base cb
        left join proj_base pb on cb.project_id = pb.id
        left join (
            SELECT
                ppa.contract_id,
                sum( ppa.pay_amount ) AS pay_amount,
                sum( ppa.pay_amount_other ) AS pay_amount_other
            FROM
                pur_pay_plan_detail pppd
                INNER JOIN pur_pay_plan ppp ON pppd.pay_plan_id = ppp.id
                INNER JOIN pur_pay_apply ppa ON pppd.pay_apply_id = ppa.id
            WHERE
                pppd.del_flag = '0'
                AND ppp.pay_status = '2'
            GROUP BY
                ppa.contract_id
        ) ppa on cb.id = ppa.contract_id

        left join (
            SELECT
                cb1.main_id as contract_id,
                sum( ppa.pay_amount ) AS pay_amount,
                sum( ppa.pay_amount_other ) AS pay_amount_other
            FROM
                pur_pay_plan_detail pppd
                INNER JOIN pur_pay_plan ppp ON pppd.pay_plan_id = ppp.id
                INNER JOIN pur_pay_apply ppa ON pppd.pay_apply_id = ppa.id
                INNER JOIN contract_base cb1 on ppa.contract_id = cb1.id
            WHERE
                pppd.del_flag = '0'
                AND ppp.pay_status = '2'
            GROUP BY
                cb1.main_id
        ) ppa1 on cb.id = ppa1.contract_id
        where cb.del_flag = '0'
        <if test='query.source == "1" or query.source == "0"'>
            and cb.source = #{query.source}
        </if>
        and cb.main_id is null
        <if test="query.auth == 'owner'">
            AND cb.create_user = #{query.auther}
        </if>
        <if test="query.auth == 'dept'">
            AND (select depart_ids from sys_user su where cb.create_user = su.username) = #{query.auther}
        </if>
        <if test="query.auth == 'subject'">
            AND pb.subject in
            <foreach collection="query.auther.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        <if test="query.projName != null and query.projName != ''">
            AND pb.proj_name LIKE concat(concat('%',#{query.projName}),'%')
        </if>
        <if test="query.prodName != null and query.prodName != ''">
            AND exists (
                select co.contract_id from contract_object co
                where co.prod_name LIKE concat(concat('%',#{query.prodName}),'%')
                and cb.id = co.contract_id
            )
        </if>
        <if test="query.contractNumber != null and query.contractNumber != ''">
            AND cb.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.contractSecondPartyId != null and query.contractSecondPartyId != ''">
            AND cb.contract_second_party_id LIKE concat(concat('%',#{query.contractSecondPartyId}),'%')
        </if>
        <if test="query.contractSecondParty != null and query.contractSecondParty != ''">
            AND cb.contract_second_party LIKE concat(concat('%',#{query.contractSecondParty}),'%')
        </if>
        <if test="query.contractName != null and query.contractName != ''">
            AND cb.contract_name LIKE concat(concat('%',#{query.contractName}),'%')
        </if>
        <if test="query.contractType != null and query.contractType != ''">
            AND cb.contract_type = #{query.contractType}
        </if>

    </select>

    <select id="fetchInvoiceAmountTaxLocal" resultType="map">
        SELECT
            sum(ifnull(ppi.invoice_amount_tax,0) + ifnull(ppi1.invoice_amount_tax,0)) as invoiceAmountTaxLocal
        FROM
        contract_base cb
        left join proj_base pb on cb.project_id = pb.id

        left join (
            select
                ppi.contract_id,
                sum(ppi.invoice_amount_tax_local) as invoice_amount_tax
            from
                purchase_pay_inovice ppi
            group by ppi.contract_id
        ) ppi on cb.id = ppi.contract_id
        left join (
            select
                cb1.main_id as contract_id,
                sum(ppi.invoice_amount_tax_local) as invoice_amount_tax
            from
                purchase_pay_inovice ppi
                inner join contract_base cb1 on ppi.contract_id = cb1.id
            group by cb1.main_id
        ) ppi1 on cb.id = ppi1.contract_id
        where cb.del_flag = '0'
        <if test='query.source == "1" or query.source == "0"'>
            and cb.source = #{query.source}
        </if>
        <if test="query.auth == 'owner'">
            AND cb.create_user = #{query.auther}
        </if>
        <if test="query.auth == 'dept'">
            AND (select depart_ids from sys_user su where cb.create_user = su.username) = #{query.auther}
        </if>
        <if test="query.auth == 'subject'">
            AND pb.subject in
            <foreach collection="query.auther.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        <if test="query.projName != null and query.projName != ''">
            AND pb.proj_name LIKE concat(concat('%',#{query.projName}),'%')
        </if>
        <if test="query.prodName != null and query.prodName != ''">
            AND exists (
                select co.contract_id from contract_object co
                where co.prod_name LIKE concat(concat('%',#{query.prodName}),'%')
                and cb.id = co.contract_id
            )
        </if>
        <if test="query.contractNumber != null and query.contractNumber != ''">
            AND cb.contract_number LIKE concat(concat('%',#{query.contractNumber}),'%')
        </if>
        <if test="query.contractSecondPartyId != null and query.contractSecondPartyId != ''">
            AND cb.contract_second_party_id LIKE concat(concat('%',#{query.contractSecondPartyId}),'%')
        </if>
        <if test="query.contractSecondParty != null and query.contractSecondParty != ''">
            AND cb.contract_second_party LIKE concat(concat('%',#{query.contractSecondParty}),'%')
        </if>
        <if test="query.contractName != null and query.contractName != ''">
            AND cb.contract_name LIKE concat(concat('%',#{query.contractName}),'%')
        </if>
        <if test="query.contractType != null and query.contractType != ''">
            AND cb.contract_type = #{query.contractType}
        </if>

    </select>

    <select id="fetchChildList" resultType="com.cmoc.modules.srm.entity.ContractObject">
        SELECT
            co.id,
            co.prod_name,
            co.qty,
            co.prod_code,
            ifnull(sibe.qty,0) + ifnull(sibe1.qty,0) as to_qty,
            co.contract_amount_tax,
            ifnull(sibe1.contract_amount_tax_local,sibe.contract_amount_tax_local) as contract_amount_tax_local
        FROM
            contract_object co
            left join (
                SELECT
                    sum( ifnull(sibe.qty,0) ) AS qty,
                    coq.record_id,
                    sum(ifnull(sibe.contract_amount_tax_local + sibe.other_amount_local,coq.contract_amount_tax_local)) as contract_amount_tax_local
                FROM
                    contract_object_qty coq
                    LEFT JOIN stk_io_bill_entry sibe ON sibe.order_detail_id = coq.id AND sibe.del_flag = '0' AND exists(
                        select sib.id from stk_io_bill sib where sibe.mid = sib.id and sib.status = '1'
                    )
                WHERE
                    coq.del_flag = '0'
                GROUP BY
                    coq.record_id
            ) sibe on co.id = sibe.record_id
            left join (
                SELECT
                    sum( ifnull(sibe.qty,0) ) AS qty,
                    co.main_detail_id as record_id,
                    sum(ifnull(sibe.contract_amount_tax_local + sibe.other_amount_local,coq.contract_amount_tax_local)) as contract_amount_tax_local
                FROM
                    contract_object_qty coq
                    LEFT JOIN stk_io_bill_entry sibe ON sibe.order_detail_id = coq.id AND sibe.del_flag = '0' AND exists(
                        select sib.id from stk_io_bill sib where sibe.mid = sib.id and sib.status = '1'
                    )
                    INNER JOIN contract_object co on coq.record_id = co.id
                WHERE
                    coq.del_flag = '0'
                GROUP BY
                    co.main_detail_id
            ) sibe1 on co.id = sibe1.record_id
        where
            1=1
            and co.del_flag = '0'
            and co.contract_id = #{query.id}
            and co.main_detail_id is null
    </select>

    <select id="fetchChildQtyList" resultType="com.cmoc.modules.srm.entity.ContractObject">
        select
            ifnull(coq1.id,coq.id) as id,
            ifnull(coq1.prod_spec_type,ifnull(coq.prod_spec_type,co.prod_spec_type)) as prod_spec_type,
            ifnull(coq1.contract_price_tax,coq.contract_price_tax) as contract_price_tax,
            ifnull(coq1.contract_amount_tax,coq.contract_amount_tax) as contract_amount_tax,
            ifnull(coq1.contract_price_tax_local,coq.contract_price_tax_local) as contract_price_tax_local,
            ifnull(coq1.contract_amount_tax_local,coq.contract_amount_tax_local) as contract_amount_tax_local,
            coq.sort,
            ifnull(sibe.qty,0) as to_qty,
            cb.contract_currency
        from
             contract_object_qty coq
        inner join contract_object co on coq.record_id = co.id
        inner join contract_base cb on co.contract_id = cb.id
        left join contract_object_qty coq1 on coq.id = coq1.main_detail_id
        left join stk_io_bill_entry sibe on ifnull(coq1.id,coq.id) = sibe.order_detail_id and sibe.del_flag = '0' and EXISTS (
             select sib.id from stk_io_bill sib where sibe.mid = sib.id and sib.status = '1'
         )
        where
            1=1
          and coq.del_flag = '0'
          and coq.record_id = #{query.id}
          and coq.main_detail_id is null
    </select>
</mapper>