<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cmoc.modules.srm.mapper.BasSupplierMapper">
    <select id="pageList" resultType="com.cmoc.modules.srm.entity.BasSupplier">
        select
           bs.id,
           bs.code,
           bs.name,
           bs.supplier_type,
           bs.supplier_prop,
           bs.register_currency,
           bs.register_capital,
           bs.register_area,
           bs.corporate,
           bs.corporate_phone,
           bs.telephone,
           bs.email,
           bs.biz_area,
           bs.fax,
           bs.status,
           bs.short_name,
           bs.website,
           bs.address,
           bs.logo_url,
           bs.supplier_attachment,
           bs.remark,
           bs.sys_account,
           bs.sys_pwd,
           bs.is_charge,
           bs.fn_start_time,
           bs.fn_end_time,
           bs.invoice_address,
           bs.bank_name,
           bs.bank_branch,
           bs.bank_account,
           bsc.contacter,
           bsc.contacter_tel,
           bsc.contacter_email,
           bsp.pay_time,
           bsp.start_time,
           bsp.end_time,
           bs.supplier_grade,
           ifnull(cb.num,0) as num,
           ifnull(cb1.numing,0) as numing,
           ifnull(cb2.contract_amount_tax_local,0) as contract_amount_tax_local,
           ifnull(py.pay_amount,0) as pay_amount
       from bas_supplier bs
       left join bas_supplier_contact bsc on bs.id = bsc.supplier_id and bsc.del_flag = '0' and bsc.is_default = '1'
       left join bas_supplier_pay bsp on bs.id = bsp.supplier_id and bsp.is_enabled = '1'
       left join (
            SELECT
                count(1) as num,
                cb.contract_second_party_id as supp_id
            FROM
                contract_base cb
            where del_flag = '0'
            and cb.contract_status = '4'
           group by cb.contract_second_party_id
       ) cb on bs.id = cb.supp_id
       LEFT JOIN (
            SELECT
                count(DISTINCT cb.id) as numing,
                cb.contract_second_party_id as supp_id
            FROM
                contract_object_qty coq
                INNER JOIN contract_base cb ON coq.contract_id = cb.id
            WHERE
            coq.del_flag = '0'
            and cb.contract_status = '4'
            AND coq.contract_amount_tax > coq.pay_rate
            group by cb.contract_second_party_id
        ) cb1 on bs.id = cb1.supp_id
        left join (
            SELECT
                sum(ifnull(vca.contract_amount_tax_local,cb.contract_amount_tax_local))  as contract_amount_tax_local,
                cb.contract_second_party_id as supp_id
            FROM
                contract_base cb
                left join view_contract_amount vca on cb.id = vca.contract_id
            where contract_status = '4'
                and del_flag = '0'
                and cb.main_id is null
            group by cb.contract_second_party_id
        ) cb2 on bs.id = cb2.supp_id
        left join (
            SELECT
                sum(CASE
                WHEN cb.contract_currency != 'RMB' THEN
                ifnull( sibe.contract_amount_tax_local + sibe.other_amount_local, ppad.pay_amount ) ELSE ppad.pay_amount
                END
                ) pay_amount,
                cb.contract_second_party_id as supp_id
            FROM
            (
                SELECT
                    ppa.contract_id,
                    sum( ppad.contract_amount_tax_local ) AS pay_amount,
                    sum( ppad.contract_amount_tax ) AS pay_amount_other,
                    ppad.bill_detail_id
                FROM
                    pur_pay_apply_detail ppad
                    INNER JOIN pur_pay_plan_detail pppd ON ppad.apply_id = pppd.pay_apply_id
                    INNER JOIN pur_pay_plan ppp ON pppd.pay_plan_id = ppp.id
                    INNER JOIN pur_pay_apply ppa ON ppad.apply_id = ppa.id
            WHERE
                ppad.del_flag = '0'
                and ppp.pay_status = '2'
            GROUP BY
                ppa.contract_id,
                ppad.bill_detail_id
            ) ppad
            INNER JOIN contract_base cb ON ppad.contract_id = cb.id
            LEFT JOIN stk_io_bill_entry sibe ON ppad.bill_detail_id = sibe.order_detail_id
            AND sibe.del_flag = '0'
            group by cb.contract_second_party_id
        ) py on bs.id = py.supp_id
        where 1=1
        <if test="query.contacterTel !=null and query.contacterTel != ''">
            and bsc.contacter_tel LIKE concat(concat('%',#{query.contacterTel}),'%')
        </if>
        <if test="query.name !=null and query.name != ''">
            and bs.name LIKE concat(concat('%',#{query.name}),'%')
        </if>
        <if test="query.code !=null and query.code != ''">
            and bs.code LIKE concat(concat('%',#{query.code}),'%')
        </if>
        <if test="query.supplierProp !=null and query.supplierProp != ''">
            and bs.supplier_prop = #{query.supplierProp}
        </if>
        <if test="query.supplierType !=null and query.supplierType != ''">
            and FIND_IN_SET(#{query.supplierType},bs.supplier_type)
        </if>
        <if test="query.status !=null and query.status != '' and query.status != 'all'">
            and bs.status in
            <foreach collection="query.status.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        <if test="query.source == 'public'">
            order by cb.num desc
        </if>
        <if test="query.source != 'public'">
            <if test="query.column != null and query.column != ''">
                <if test="query.column == 'code'">
                    order by bs.code
                </if>
                <if test="query.column == 'name'">
                    order by bs.name
                </if>
                <if test="query.column == 'supplierPropDict'">
                    order by bs.supplier_prop
                </if>
                <if test="query.column == 'registerCapital'">
                    order by bs.register_capital
                </if>
                <if test="query.column == 'contacter'">
                    order by bsc.contacter
                </if>
                <if test="query.column == 'contacterTel'">
                    order by bsc.contacter_tel
                </if>
                <if test="query.column == 'endTime'">
                    order by bsp.end_time
                </if>
                <if test="query.column == 'status'">
                    order by bs.status
                </if>
                <if test="query.column == 'createTime'">
                    order by bs.create_time
                </if>
                <if test="query.order == 'asc'">
                    asc
                </if>
                <if test="query.order == 'desc'">
                    desc
                </if>
            </if>
        </if>

    </select>

    <select id="fetchSuppCategory" resultType="map">
        select
            count(1) as num,
            supplier_prop as supplierProp
        from bas_supplier bs
        where 1=1
        <if test="query.name !=null and query.name != ''">
            and bs.name LIKE concat(concat('%',#{query.name}),'%')
        </if>
        <if test="query.code !=null and query.code != ''">
            and bs.code LIKE concat(concat('%',#{query.code}),'%')
        </if>
        <if test="query.supplierProp !=null and query.supplierProp != ''">
            and bs.supplier_prop = #{query.supplierProp}
        </if>
        <if test="query.supplierType !=null and query.supplierType != ''">
            and FIND_IN_SET(#{query.supplierType},bs.supplier_type)
        </if>
        <if test="query.status !=null and query.status != '' and query.status != 'all'">
            and bs.status in
            <foreach collection="query.status.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        group by supplier_prop
    </select>

    <select id="fetchSuppType" resultType="map">
        SELECT
            count( 1 ) AS num,
            supplier_type as supplierType
        FROM
        (
            SELECT
                substring_index( substring_index( supplier_type, ',', b.help_topic_id + 1 ), ',',- 1 ) supplier_type
            FROM
                bas_supplier a
                JOIN mysql.help_topic b ON b.help_topic_id &lt; ( length( supplier_type ) - length( REPLACE ( supplier_type, ',', '' ))+ 1 )
            where 1=1
            <if test="query.name !=null and query.name != ''">
                and a.name LIKE concat(concat('%',#{query.name}),'%')
            </if>
            <if test="query.code !=null and query.code != ''">
                and a.code LIKE concat(concat('%',#{query.code}),'%')
            </if>
            <if test="query.supplierProp !=null and query.supplierProp != ''">
                and a.supplier_prop = #{query.supplierProp}
            </if>
            <if test="query.supplierType !=null and query.supplierType != ''">
                and FIND_IN_SET(#{query.supplierType},a.supplier_type)
            </if>
            <if test="query.status !=null and query.status != '' and query.status != 'all'">
                and a.status in
                <foreach collection="query.status.split(',')" item="item" open="(" close=")" separator="," >
                    #{item}
                </foreach>
            </if>
            ORDER BY
                a.id
        ) tmp
        GROUP BY
            tmp.supplier_type
    </select>

    <select id="fetchSuppContract" resultType="map">
        SELECT
            sum(cb.num) as num
        FROM
            bas_supplier bs
            left join (
                select count(1) as num,contract_second_party_id from contract_base
                where del_flag = '0'
                and contract_status = '4'
                group by contract_second_party_id
            ) cb on bs.id = cb.contract_second_party_id
        where 1=1
        <if test="query.name !=null and query.name != ''">
            and bs.name LIKE concat(concat('%',#{query.name}),'%')
        </if>
        <if test="query.code !=null and query.code != ''">
            and bs.code LIKE concat(concat('%',#{query.code}),'%')
        </if>
        <if test="query.supplierProp !=null and query.supplierProp != ''">
            and bs.supplier_prop = #{query.supplierProp}
        </if>
        <if test="query.supplierType !=null and query.supplierType != ''">
            and FIND_IN_SET(#{query.supplierType},bs.supplier_type)
        </if>
        <if test="query.status !=null and query.status != '' and query.status != 'all'">
            and bs.status in
            <foreach collection="query.status.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
    </select>

    <select id="fetchSuppContracting" resultType="map">
        SELECT
            count( cb.id ) AS num
        FROM
            bas_supplier bs
            LEFT JOIN (
                SELECT DISTINCT
                    cb.id,
                    cb.contract_second_party_id
                FROM
                    contract_object_qty coq
                        INNER JOIN contract_base cb ON coq.contract_id = cb.id
                WHERE
                    coq.del_flag = '0'
                    and cb.contract_status = '4'
                  AND coq.contract_amount_tax > coq.pay_rate
            ) cb ON bs.id = cb.contract_second_party_id
        where 1=1
        <if test="query.name !=null and query.name != ''">
            and bs.name LIKE concat(concat('%',#{query.name}),'%')
        </if>
        <if test="query.code !=null and query.code != ''">
            and bs.code LIKE concat(concat('%',#{query.code}),'%')
        </if>
        <if test="query.supplierProp !=null and query.supplierProp != ''">
            and bs.supplier_prop = #{query.supplierProp}
        </if>
        <if test="query.supplierType !=null and query.supplierType != ''">
            and FIND_IN_SET(#{query.supplierType},bs.supplier_type)
        </if>
        <if test="query.status !=null and query.status != '' and query.status != 'all'">
            and bs.status in
            <foreach collection="query.status.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
    </select>

    <select id="fetchSuppStatus" resultType="map">
        SELECT
            count(1) as num,
            case when bs.`status` in ('3','4','5') then '0' else '1' end as status
        FROM
            bas_supplier bs
        where 1=1
        <if test="query.name !=null and query.name != ''">
            and bs.name LIKE concat(concat('%',#{query.name}),'%')
        </if>
        <if test="query.code !=null and query.code != ''">
            and bs.code LIKE concat(concat('%',#{query.code}),'%')
        </if>
        <if test="query.supplierProp !=null and query.supplierProp != ''">
            and bs.supplier_prop = #{query.supplierProp}
        </if>
        <if test="query.supplierType !=null and query.supplierType != ''">
            and FIND_IN_SET(#{query.supplierType},bs.supplier_type)
        </if>
        <if test="query.status !=null and query.status != '' and query.status != 'all'">
            and bs.status in
            <foreach collection="query.status.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
        group by  case when bs.`status` in ('3','4','5') then '0' else '1' end
    </select>

    <select id="fetchSuppActive" resultType="map">
        SELECT
            count(DISTINCT bs.id) as num
        FROM
            bas_supplier bs
                inner join contract_base cb on bs.id = cb.contract_second_party_id
        where cb.del_flag = '0'
          and cb.contract_status = '4'
        <if test="query.name !=null and query.name != ''">
            and bs.name LIKE concat(concat('%',#{query.name}),'%')
        </if>
        <if test="query.code !=null and query.code != ''">
            and bs.code LIKE concat(concat('%',#{query.code}),'%')
        </if>
        <if test="query.supplierProp !=null and query.supplierProp != ''">
            and bs.supplier_prop = #{query.supplierProp}
        </if>
        <if test="query.supplierType !=null and query.supplierType != ''">
            and FIND_IN_SET(#{query.supplierType},bs.supplier_type)
        </if>
        <if test="query.status !=null and query.status != '' and query.status != 'all'">
            and bs.status in
            <foreach collection="query.status.split(',')" item="item" open="(" close=")" separator="," >
                #{item}
            </foreach>
        </if>
    </select>
</mapper>